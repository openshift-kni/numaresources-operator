---
defaultChannel: "4.12"
icon:
  base64data: iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAYNJREFUWIXt1T9rlEEQx/HPnecJGoKJhY+NEgW5VrCxSZpr0oWUKcRgYSoLGwv1RfgWfAnWFlZWKQIRJE00V6XwTxQsdSwygWV5DEeaS/EMLDPP/Gaf/e7swz49hBlaf5aLdwAdQAfQAZwfgLa7OP4TT6tPMw/6TQaPK+EAcxhlXNs3NDngaaUvpx8XuRv4g+clAOzjBRZaFprGPuN1ldtoqXuEXWzWAEdYwvczAiylH6W/iCctdZt4hit4UAJcwDAT984IsYVPGa+26CsY4D3e4MOJ0BA7x99GjIkgesQXYo4YZawaX4nrRJNzFoi9nBvE/fTjrI8ciDvEEXGZGJSU79I/xN+Mf2Gx2s0lzOMnrmbuB+4Wu98u6ufxGxPsZG6A9boDiJtJOskOILYL+n7Gb/O5KbQ14iPxqtj1mNgqaqg6UgMgXqZ4AnArn/fzOIK41gIwzKO5XQEEsVqtMSQOj49MBHpVm+tcfYHUWu+UuO39tT4zOx//gg6gA+gAOoBZ2j82IbSJZWt9tAAAAABJRU5ErkJggg==
  mediatype: image/png
name: numaresources-operator
schema: olm.package
---
entries:
- name: numaresources-operator.v4.12.11
  replaces: numaresources-operator.v4.12.9
  skipRange: '>=4.11.0 <4.12.11'
- name: numaresources-operator.v4.12.12
  replaces: numaresources-operator.v4.12.11
  skipRange: '>=4.11.0 <4.12.12'
- name: numaresources-operator.v4.12.13
  replaces: numaresources-operator.v4.12.12
  skipRange: '>=4.11.0 <4.12.13'
- name: numaresources-operator.v4.12.14
  replaces: numaresources-operator.v4.12.13
  skipRange: '>=4.11.0 <4.12.14'
- name: numaresources-operator.v4.12.6
  skipRange: '>=4.11.0 <4.12.6'
- name: numaresources-operator.v4.12.8
  replaces: numaresources-operator.v4.12.6
  skipRange: '>=4.11.0 <4.12.8'
- name: numaresources-operator.v4.12.9
  replaces: numaresources-operator.v4.12.8
  skipRange: '>=4.11.0 <4.12.9'
name: "4.12"
package: numaresources-operator
schema: olm.channel
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:e2015a2343c1abe89db244376f3b7ff69e1c1260319380f9fb94543db608ea71
name: numaresources-operator.v4.12.11
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.12.11
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:e2015a2343c1abe89db244376f3b7ff69e1c1260319380f9fb94543db608ea71
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel8-operator@sha256:1e84676320b9f9dd5466c522259b4c4dd1aa3e41ce1410ae3b9bcc66f9854b54
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:83c9d7dd270e76fac2ae90769ba4dbab4a463c9e11126f0351ebf33abdd088b6
name: numaresources-operator.v4.12.12
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.12.12
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:83c9d7dd270e76fac2ae90769ba4dbab4a463c9e11126f0351ebf33abdd088b6
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel8-operator@sha256:fea606c210337bb680e64f530c93933b8bf11d98b0560b5972d3783f3a968a2a
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:fbe3a73849afb38d1d473a4282cd5ad66f47029e0ba94fdfaa7bdd75ee8e6864
name: numaresources-operator.v4.12.13
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.12.13
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwibm9kZXRvcG9sb2d5Lm9wZW5zaGlmdC5pby92MWFscGhhMVwiLFxuICAgIFwia2luZFwiOiBcIk5VTUFSZXNvdXJjZXNPcGVyYXRvclwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwibnVtYXJlc291cmNlc29wZXJhdG9yXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcIm5vZGVHcm91cHNcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgXCJtYWNoaW5lQ29uZmlnUG9vbFNlbGVjdG9yXCI6IHtcbiAgICAgICAgICAgIFwibWF0Y2hMYWJlbHNcIjoge1xuICAgICAgICAgICAgICBcInBvb2xzLm9wZXJhdG9yLm1hY2hpbmVjb25maWd1cmF0aW9uLm9wZW5zaGlmdC5pby93b3JrZXJcIjogXCJcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcIm5vZGV0b3BvbG9neS5vcGVuc2hpZnQuaW8vdjFhbHBoYTFcIixcbiAgICBcImtpbmRcIjogXCJOVU1BUmVzb3VyY2VzU2NoZWR1bGVyXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJudW1hcmVzb3VyY2Vzc2NoZWR1bGVyXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImltYWdlU3BlY1wiOiBcIlVSTF9PRl9TQ0hFRFVMRVJfSU1BR0VfRlJPTV9SRURIQVRfUkVHSVNUUllcIixcbiAgICAgIFwibG9nTGV2ZWxcIjogXCJOb3JtYWxcIixcbiAgICAgIFwic2NoZWR1bGVyTmFtZVwiOiBcInRvcG8tYXdhcmUtc2NoZWR1bGVyXCJcbiAgICB9XG4gIH1cbl0iLCJjYXBhYmlsaXRpZXMiOiJCYXNpYyBJbnN0YWxsIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9jbmYiOiJ0cnVlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9jbmkiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vY3NpIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2Rpc2Nvbm5lY3RlZCI6InRydWUiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2ZpcHMtY29tcGxpYW50IjoidHJ1ZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vcHJveHktYXdhcmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdGxzLXByb2ZpbGVzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXdzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXp1cmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1nY3AiOiJmYWxzZSIsIm9sbS5za2lwUmFuZ2UiOiJcdTAwM2U9NC4xMS4wIFx1MDAzYzQuMTIuMTMiLCJvcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3ZhbGlkLXN1YnNjcmlwdGlvbiI6Iltcblx0XCJPcGVuU2hpZnQgS3ViZXJuZXRlcyBFbmdpbmVcIixcblx0XCJPcGVuU2hpZnQgQ29udGFpbmVyIFBsYXRmb3JtXCIsXG5cdFwiT3BlblNoaWZ0IFBsYXRmb3JtIFBsdXNcIlxuXSIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9idWlsZGVyIjoib3BlcmF0b3Itc2RrLXYxLjI1LjAiLCJvcGVyYXRvcnMub3BlcmF0b3JmcmFtZXdvcmsuaW8vcHJvamVjdF9sYXlvdXQiOiJnby5rdWJlYnVpbGRlci5pby92MyJ9LCJuYW1lIjoibnVtYXJlc291cmNlcy1vcGVyYXRvci52NC4xMi4xMyIsIm5hbWVzcGFjZSI6InBsYWNlaG9sZGVyIn0sInNwZWMiOnsiYXBpc2VydmljZWRlZmluaXRpb25zIjp7fSwiY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucyI6eyJvd25lZCI6W3siZGVzY3JpcHRpb24iOiJOVU1BUmVzb3VyY2VzT3BlcmF0b3IgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG51bWFyZXNvdXJjZXNvcGVyYXRvcnMgQVBJIiwiZGlzcGxheU5hbWUiOiJOVU1BIFJlc291cmNlcyBPcGVyYXRvciIsImtpbmQiOiJOVU1BUmVzb3VyY2VzT3BlcmF0b3IiLCJuYW1lIjoibnVtYXJlc291cmNlc29wZXJhdG9ycy5ub2RldG9wb2xvZ3kub3BlbnNoaWZ0LmlvIiwicmVzb3VyY2VzIjpbeyJraW5kIjoiRGFlbW9uU2V0IiwibmFtZSI6IiIsInZlcnNpb24iOiJ2MSJ9XSwic3BlY0Rlc2NyaXB0b3JzIjpbeyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIFJlc291cmNlIFRvcG9sb2d5IEV4cG9ydGVyIGltYWdlIFVSTCIsImRpc3BsYXlOYW1lIjoiT3B0aW9uYWwgUlRFIGltYWdlIFVSTCIsInBhdGgiOiJpbWFnZVNwZWMiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6dGV4dCJdfSx7ImRlc2NyaXB0aW9uIjoiVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJkaXNwbGF5TmFtZSI6IlJURSBsb2cgdmVyYm9zaXR5IiwicGF0aCI6ImxvZ0xldmVsIn0seyJkZXNjcmlwdGlvbiI6Ikdyb3VwIG9mIE5vZGVzIHRvIGVuYWJsZSBSVEUgb24iLCJkaXNwbGF5TmFtZSI6Ikdyb3VwIG9mIG5vZGVzIHRvIGVuYWJsZSBSVEUgb24iLCJwYXRoIjoibm9kZUdyb3VwcyJ9LHsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaE1vZGUgc2V0cyB0aGUgbWVjaGFuaXNtIHdoaWNoIHdpbGwgYmUgdXNlZCB0byByZWZyZXNoIHRoZSB0b3BvbG9neSBpbmZvLiIsImRpc3BsYXlOYW1lIjoiVG9wb2xvZ3kgaW5mbyBtZWNoYW5pc20gc2V0dGluZyIsInBhdGgiOiJub2RlR3JvdXBzWzBdLmNvbmZpZy5pbmZvUmVmcmVzaE1vZGUiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6dGV4dCJdfSx7ImRlc2NyaXB0aW9uIjoiSW5mb1JlZnJlc2hQZXJpb2Qgc2V0cyB0aGUgdG9wb2xvZ3kgaW5mbyByZWZyZXNoIHBlcmlvZC4gVXNlIGV4cGxpY2l0IDAgdG8gZGlzYWJsZS4iLCJkaXNwbGF5TmFtZSI6IlRvcG9sb2d5IGluZm8gcmVmcmVzaCBwZXJpb2Qgc2V0dGluZyIsInBhdGgiOiJub2RlR3JvdXBzWzBdLmNvbmZpZy5pbmZvUmVmcmVzaFBlcmlvZCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTp0ZXh0Il19LHsiZGVzY3JpcHRpb24iOiJQb2RzRmluZ2VycHJpbnRpbmcgZGVmaW5lcyBpZiBwb2QgZmluZ2VycHJpbnQgc2hvdWxkIGJlIHJlcG9ydGVkIGZvciB0aGUgbWFjaGluZXMgYmVsb25naW5nIHRvIHRoaXMgZ3JvdXAiLCJkaXNwbGF5TmFtZSI6IkVuYWJsZSBvciBkaXNhYmxlIHRoZSBwb2RzIGZpbmdlcnByaW50aW5nIHNldHRpbmciLCJwYXRoIjoibm9kZUdyb3Vwc1swXS5jb25maWcucG9kc0ZpbmdlcnByaW50aW5nIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnRleHQiXX0seyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIE5hbWVzcGFjZS9OYW1lIGdsb2IgcGF0dGVybnMgb2YgcG9kIHRvIGlnbm9yZSBhdCBub2RlIGxldmVsIiwiZGlzcGxheU5hbWUiOiJPcHRpb25hbCBpZ25vcmUgcG9kIG5hbWVzcGFjZS9uYW1lIGdsb2IgcGF0dGVybnMiLCJwYXRoIjoicG9kRXhjbHVkZXMifV0sInN0YXR1c0Rlc2NyaXB0b3JzIjpbeyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgc2hvdyB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgTlVNQVJlc291cmNlc09wZXJhdG9yIE9wZXJhdG9yIiwiZGlzcGxheU5hbWUiOiJDb25kaXRpb24gcmVwb3J0ZWQiLCJwYXRoIjoiY29uZGl0aW9ucyJ9LHsiZGVzY3JpcHRpb24iOiJEYWVtb25TZXRzIG9mIHRoZSBjb25maWd1cmVkIFJURXMsIG9uZSBwZXIgbm9kZSBncm91cCIsImRpc3BsYXlOYW1lIjoiUlRFIERhZW1vblNldHMiLCJwYXRoIjoiZGFlbW9uc2V0cyJ9LHsiZGVzY3JpcHRpb24iOiJNYWNoaW5lQ29uZmlnUG9vbHMgcmVzb2x2ZWQgZnJvbSBjb25maWd1cmVkIG5vZGUgZ3JvdXBzIiwiZGlzcGxheU5hbWUiOiJSVEUgTUNQcyBmcm9tIG5vZGUgZ3JvdXBzIiwicGF0aCI6Im1hY2hpbmVjb25maWdwb29scyJ9LHsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIHJlcHJlc2VudHMgdGhlIGxhdGVzdCBhdmFpbGFibGUgb2JzZXJ2YXRpb25zIG9mIE1hY2hpbmVDb25maWdQb29sIGN1cnJlbnQgc3RhdGUuIiwiZGlzcGxheU5hbWUiOiJPcHRpb25hbCBjb25kaXRpb25zIHJlcG9ydGVkIGZvciB0aGlzIE5vZGVHcm91cCIsInBhdGgiOiJtYWNoaW5lY29uZmlncG9vbHNbMF0uY29uZGl0aW9ucyJ9LHsiZGVzY3JpcHRpb24iOiJOb2RlR3JvdXBDb25maWcgcmVwcmVzZW50cyB0aGUgbGF0ZXN0IGF2YWlsYWJsZSBjb25maWd1cmF0aW9uIGFwcGxpZWQgdG8gdGhpcyBNYWNoaW5lQ29uZmlnUG9vbCIsImRpc3BsYXlOYW1lIjoiT3B0aW9uYWwgY29uZmlndXJhdGlvbiBlbmZvcmNlZCBvbiB0aGlzIE5vZGVHcm91cCIsInBhdGgiOiJtYWNoaW5lY29uZmlncG9vbHNbMF0uY29uZmlnIn1dLCJ2ZXJzaW9uIjoidjEifSx7ImRlc2NyaXB0aW9uIjoiTlVNQVJlc291cmNlc09wZXJhdG9yIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBudW1hcmVzb3VyY2Vzb3BlcmF0b3JzIEFQSSIsImRpc3BsYXlOYW1lIjoiTlVNQSBSZXNvdXJjZXMgT3BlcmF0b3IiLCJraW5kIjoiTlVNQVJlc291cmNlc09wZXJhdG9yIiwibmFtZSI6Im51bWFyZXNvdXJjZXNvcGVyYXRvcnMubm9kZXRvcG9sb2d5Lm9wZW5zaGlmdC5pbyIsInJlc291cmNlcyI6W3sia2luZCI6IkRhZW1vblNldCIsIm5hbWUiOiIiLCJ2ZXJzaW9uIjoidjEifV0sInNwZWNEZXNjcmlwdG9ycyI6W3siZGVzY3JpcHRpb24iOiJPcHRpb25hbCBSZXNvdXJjZSBUb3BvbG9neSBFeHBvcnRlciBpbWFnZSBVUkwiLCJkaXNwbGF5TmFtZSI6Ik9wdGlvbmFsIFJURSBpbWFnZSBVUkwiLCJwYXRoIjoiaW1hZ2VTcGVjIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnRleHQiXX0seyJkZXNjcmlwdGlvbiI6IlZhbGlkIHZhbHVlcyBhcmU6IFwiTm9ybWFsXCIsIFwiRGVidWdcIiwgXCJUcmFjZVwiLCBcIlRyYWNlQWxsXCIuIERlZmF1bHRzIHRvIFwiTm9ybWFsXCIuIiwiZGlzcGxheU5hbWUiOiJSVEUgbG9nIHZlcmJvc2l0eSIsInBhdGgiOiJsb2dMZXZlbCJ9LHsiZGVzY3JpcHRpb24iOiJHcm91cCBvZiBOb2RlcyB0byBlbmFibGUgUlRFIG9uIiwiZGlzcGxheU5hbWUiOiJHcm91cCBvZiBub2RlcyB0byBlbmFibGUgUlRFIG9uIiwicGF0aCI6Im5vZGVHcm91cHMifSx7ImRlc2NyaXB0aW9uIjoiSW5mb1JlZnJlc2hNb2RlIHNldHMgdGhlIG1lY2hhbmlzbSB3aGljaCB3aWxsIGJlIHVzZWQgdG8gcmVmcmVzaCB0aGUgdG9wb2xvZ3kgaW5mby4iLCJkaXNwbGF5TmFtZSI6IlRvcG9sb2d5IGluZm8gbWVjaGFuaXNtIHNldHRpbmciLCJwYXRoIjoibm9kZUdyb3Vwc1swXS5jb25maWcuaW5mb1JlZnJlc2hNb2RlIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnRleHQiXX0seyJkZXNjcmlwdGlvbiI6IkluZm9SZWZyZXNoUGVyaW9kIHNldHMgdGhlIHRvcG9sb2d5IGluZm8gcmVmcmVzaCBwZXJpb2QuIFVzZSBleHBsaWNpdCAwIHRvIGRpc2FibGUuIiwiZGlzcGxheU5hbWUiOiJUb3BvbG9neSBpbmZvIHJlZnJlc2ggcGVyaW9kIHNldHRpbmciLCJwYXRoIjoibm9kZUdyb3Vwc1swXS5jb25maWcuaW5mb1JlZnJlc2hQZXJpb2QiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6dGV4dCJdfSx7ImRlc2NyaXB0aW9uIjoiUG9kc0ZpbmdlcnByaW50aW5nIGRlZmluZXMgaWYgcG9kIGZpbmdlcnByaW50IHNob3VsZCBiZSByZXBvcnRlZCBmb3IgdGhlIG1hY2hpbmVzIGJlbG9uZ2luZyB0byB0aGlzIGdyb3VwIiwiZGlzcGxheU5hbWUiOiJFbmFibGUgb3IgZGlzYWJsZSB0aGUgcG9kcyBmaW5nZXJwcmludGluZyBzZXR0aW5nIiwicGF0aCI6Im5vZGVHcm91cHNbMF0uY29uZmlnLnBvZHNGaW5nZXJwcmludGluZyIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTp0ZXh0Il19LHsiZGVzY3JpcHRpb24iOiJPcHRpb25hbCBOYW1lc3BhY2UvTmFtZSBnbG9iIHBhdHRlcm5zIG9mIHBvZCB0byBpZ25vcmUgYXQgbm9kZSBsZXZlbCIsImRpc3BsYXlOYW1lIjoiT3B0aW9uYWwgaWdub3JlIHBvZCBuYW1lc3BhY2UvbmFtZSBnbG9iIHBhdHRlcm5zIiwicGF0aCI6InBvZEV4Y2x1ZGVzIn1dLCJzdGF0dXNEZXNjcmlwdG9ycyI6W3siZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIHNob3cgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIE5VTUFSZXNvdXJjZXNPcGVyYXRvciBPcGVyYXRvciIsImRpc3BsYXlOYW1lIjoiQ29uZGl0aW9uIHJlcG9ydGVkIiwicGF0aCI6ImNvbmRpdGlvbnMifSx7ImRlc2NyaXB0aW9uIjoiRGFlbW9uU2V0cyBvZiB0aGUgY29uZmlndXJlZCBSVEVzLCBvbmUgcGVyIG5vZGUgZ3JvdXAiLCJkaXNwbGF5TmFtZSI6IlJURSBEYWVtb25TZXRzIiwicGF0aCI6ImRhZW1vbnNldHMifSx7ImRlc2NyaXB0aW9uIjoiTWFjaGluZUNvbmZpZ1Bvb2xzIHJlc29sdmVkIGZyb20gY29uZmlndXJlZCBub2RlIGdyb3VwcyIsImRpc3BsYXlOYW1lIjoiUlRFIE1DUHMgZnJvbSBub2RlIGdyb3VwcyIsInBhdGgiOiJtYWNoaW5lY29uZmlncG9vbHMifSx7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyByZXByZXNlbnRzIHRoZSBsYXRlc3QgYXZhaWxhYmxlIG9ic2VydmF0aW9ucyBvZiBNYWNoaW5lQ29uZmlnUG9vbCBjdXJyZW50IHN0YXRlLiIsImRpc3BsYXlOYW1lIjoiT3B0aW9uYWwgY29uZGl0aW9ucyByZXBvcnRlZCBmb3IgdGhpcyBOb2RlR3JvdXAiLCJwYXRoIjoibWFjaGluZWNvbmZpZ3Bvb2xzWzBdLmNvbmRpdGlvbnMifSx7ImRlc2NyaXB0aW9uIjoiTm9kZUdyb3VwQ29uZmlnIHJlcHJlc2VudHMgdGhlIGxhdGVzdCBhdmFpbGFibGUgY29uZmlndXJhdGlvbiBhcHBsaWVkIHRvIHRoaXMgTWFjaGluZUNvbmZpZ1Bvb2wiLCJkaXNwbGF5TmFtZSI6Ik9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gZW5mb3JjZWQgb24gdGhpcyBOb2RlR3JvdXAiLCJwYXRoIjoibWFjaGluZWNvbmZpZ3Bvb2xzWzBdLmNvbmZpZyJ9XSwidmVyc2lvbiI6InYxYWxwaGExIn0seyJkZXNjcmlwdGlvbiI6Ik5VTUFSZXNvdXJjZXNTY2hlZHVsZXIgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG51bWFyZXNvdXJjZXNzY2hlZHVsZXJzIEFQSSIsImRpc3BsYXlOYW1lIjoiTlVNQSBBd2FyZSBTY2hlZHVsZXIiLCJraW5kIjoiTlVNQVJlc291cmNlc1NjaGVkdWxlciIsIm5hbWUiOiJudW1hcmVzb3VyY2Vzc2NoZWR1bGVycy5ub2RldG9wb2xvZ3kub3BlbnNoaWZ0LmlvIiwicmVzb3VyY2VzIjpbeyJraW5kIjoiRGVwbG95bWVudCIsIm5hbWUiOiJzZWNvbmRhcnktc2NoZWR1bGVyLWRlcGxveW1lbnQiLCJ2ZXJzaW9uIjoidjEifV0sInNwZWNEZXNjcmlwdG9ycyI6W3siZGVzY3JpcHRpb24iOiJTZXQgdGhlIGNhY2hlIHJlc3luYyBkZWJ1ZyBvcHRpb25zLiBEZWZhdWx0cyB0byBkaXNhYmxlLiIsImRpc3BsYXlOYW1lIjoiU2NoZWR1bGVyIGNhY2hlIHJlc3luYyBkZWJ1ZyBzZXR0aW5nIiwicGF0aCI6ImNhY2hlUmVzeW5jRGVidWciLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6dGV4dCJdfSx7ImRlc2NyaXB0aW9uIjoiU2V0IHRoZSBjYWNoZSByZXN5bmMgcGVyaW9kLiBVc2UgZXhwbGljaXQgMCB0byBkaXNhYmxlLiIsImRpc3BsYXlOYW1lIjoiU2NoZWR1bGVyIGNhY2hlIHJlc3luYyBwZXJpb2Qgc2V0dGluZyIsInBhdGgiOiJjYWNoZVJlc3luY1BlcmlvZCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTp0ZXh0Il19LHsiZGVzY3JpcHRpb24iOiJTY2hlZHVsZXIgY29udGFpbmVyIGltYWdlIFVSTCIsImRpc3BsYXlOYW1lIjoiU2NoZWR1bGVyIGNvbnRhaW5lciBpbWFnZSBVUkwiLCJwYXRoIjoiaW1hZ2VTcGVjIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnRleHQiXX0seyJkZXNjcmlwdGlvbiI6IlZhbGlkIHZhbHVlcyBhcmU6IFwiTm9ybWFsXCIsIFwiRGVidWdcIiwgXCJUcmFjZVwiLCBcIlRyYWNlQWxsXCIuIERlZmF1bHRzIHRvIFwiTm9ybWFsXCIuIiwiZGlzcGxheU5hbWUiOiJTY2hlZHVsZXIgbG9nIHZlcmJvc2l0eSIsInBhdGgiOiJsb2dMZXZlbCJ9LHsiZGVzY3JpcHRpb24iOiJTZXQgdGhlIGluZm9ybWVyIHR5cGUgdG8gYmUgdXNlZCBieSB0aGUgc2NoZWR1bGVyIHRvIGNvbm5lY3QgdG8gdGhlIGFwaXNlcnZlci4gRGVmYXVsdHMgdG8gZGVkaWNhdGVkLiIsImRpc3BsYXlOYW1lIjoiU2NoZWR1bGVyIGNhY2hlIGFwaXNlcnZlciBpbmZvcm1lciBzZXR0aW5nIiwicGF0aCI6InNjaGVkdWxlckluZm9ybWVyIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnRleHQiXX0seyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlciBuYW1lIHRvIGJlIHVzZWQgaW4gcG9kIHRlbXBsYXRlcyIsImRpc3BsYXlOYW1lIjoiU2NoZWR1bGVyIG5hbWUiLCJwYXRoIjoic2NoZWR1bGVyTmFtZSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTp0ZXh0Il19XSwic3RhdHVzRGVzY3JpcHRvcnMiOlt7ImRlc2NyaXB0aW9uIjoiQ2FjaGVSZXN5bmNQZXJpb2Qgc2hvd3MgdGhlIGN1cnJlbnQgY2FjaGUgcmVzeW5jIHBlcmlvZCIsImRpc3BsYXlOYW1lIjoiU2NoZWR1bGVyIGNhY2hlIHJlc3luYyBwZXJpb2QiLCJwYXRoIjoiY2FjaGVSZXN5bmNQZXJpb2QifSx7ImRlc2NyaXB0aW9uIjoiRGVwbG95bWVudCBvZiB0aGUgc2Vjb25kYXJ5IHNjaGVkdWxlciwgbmFtZXNwYWNlZCBuYW1lIiwiZGlzcGxheU5hbWUiOiJTY2hlZHVsZXIgZGVwbG95bWVudCIsInBhdGgiOiJkZXBsb3ltZW50In0seyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlciBuYW1lIHRvIGJlIHVzZWQgaW4gcG9kIHRlbXBsYXRlcyIsImRpc3BsYXlOYW1lIjoiU2NoZWR1bGVyIG5hbWUiLCJwYXRoIjoic2NoZWR1bGVyTmFtZSJ9XSwidmVyc2lvbiI6InYxIn0seyJkZXNjcmlwdGlvbiI6Ik5VTUFSZXNvdXJjZXNTY2hlZHVsZXIgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG51bWFyZXNvdXJjZXNzY2hlZHVsZXJzIEFQSSIsImRpc3BsYXlOYW1lIjoiTlVNQSBBd2FyZSBTY2hlZHVsZXIiLCJraW5kIjoiTlVNQVJlc291cmNlc1NjaGVkdWxlciIsIm5hbWUiOiJudW1hcmVzb3VyY2Vzc2NoZWR1bGVycy5ub2RldG9wb2xvZ3kub3BlbnNoaWZ0LmlvIiwicmVzb3VyY2VzIjpbeyJraW5kIjoiRGVwbG95bWVudCIsIm5hbWUiOiJzZWNvbmRhcnktc2NoZWR1bGVyLWRlcGxveW1lbnQiLCJ2ZXJzaW9uIjoidjEifV0sInNwZWNEZXNjcmlwdG9ycyI6W3siZGVzY3JpcHRpb24iOiJTZXQgdGhlIGNhY2hlIHJlc3luYyBwZXJpb2QuIFVzZSBleHBsaWNpdCAwIHRvIGRpc2FibGUuIiwiZGlzcGxheU5hbWUiOiJTY2hlZHVsZXIgY2FjaGUgcmVzeW5jIHBlcmlvZCBzZXR0aW5nIiwicGF0aCI6ImNhY2hlUmVzeW5jUGVyaW9kIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnRleHQiXX0seyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlciBjb250YWluZXIgaW1hZ2UgVVJMIiwiZGlzcGxheU5hbWUiOiJTY2hlZHVsZXIgY29udGFpbmVyIGltYWdlIFVSTCIsInBhdGgiOiJpbWFnZVNwZWMiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6dGV4dCJdfSx7ImRlc2NyaXB0aW9uIjoiVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJkaXNwbGF5TmFtZSI6IlNjaGVkdWxlciBsb2cgdmVyYm9zaXR5IiwicGF0aCI6ImxvZ0xldmVsIn0seyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlciBuYW1lIHRvIGJlIHVzZWQgaW4gcG9kIHRlbXBsYXRlcyIsImRpc3BsYXlOYW1lIjoiU2NoZWR1bGVyIG5hbWUiLCJwYXRoIjoic2NoZWR1bGVyTmFtZSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTp0ZXh0Il19XSwic3RhdHVzRGVzY3JpcHRvcnMiOlt7ImRlc2NyaXB0aW9uIjoiRGVwbG95bWVudCBvZiB0aGUgc2Vjb25kYXJ5IHNjaGVkdWxlciwgbmFtZXNwYWNlZCBuYW1lIiwiZGlzcGxheU5hbWUiOiJTY2hlZHVsZXIgZGVwbG95bWVudCIsInBhdGgiOiJkZXBsb3ltZW50In0seyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlciBuYW1lIHRvIGJlIHVzZWQgaW4gcG9kIHRlbXBsYXRlcyIsImRpc3BsYXlOYW1lIjoiU2NoZWR1bGVyIG5hbWUiLCJwYXRoIjoic2NoZWR1bGVyTmFtZSJ9XSwidmVyc2lvbiI6InYxYWxwaGExIn1dfSwiZGVzY3JpcHRpb24iOiJOVU1BIHJlc291cmNlcyBleHBvcnRlciBvcGVyYXRvciIsImRpc3BsYXlOYW1lIjoibnVtYXJlc291cmNlcy1vcGVyYXRvciIsImljb24iOlt7ImJhc2U2NGRhdGEiOiJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBWUFBQUJ6ZW5yMEFBQUFCSE5DU1ZRSUNBZ0lmQWhraUFBQUFZTkpSRUZVV0lYdDFUOXJsRUVReC9IUG5lY0pHb0tKaFkrTkVnVzVWckN4U1pwcjBvV1VLY1JnWVNvTEd3djFSZmdXZkFuV0ZsWldLUUlSSkUwMFY2WHdUeFFzZFN3eWdXVjVERWVhUy9FTUxEUFAvR2FmL2U3c3d6NDloQmxhZjVhTGR3QWRRQWZRQVp3ZmdMYTdPUDRUVDZ0UE13LzZUUWFQSytFQWN4aGxYTnMzTkRuZ2FhVXZweDhYdVJ2NGcrY2xBT3pqQlJaYUZwckdQdU4xbGR0b3FYdUVYV3pXQUVkWXd2Y3pBaXlsSDZXL2lDY3RkWnQ0aGl0NFVBSmN3REFUOTg0SXNZVlBHYSsyNkNzWTREM2U0TU9KMEJBN3g5OUdqSWtnZXNRWFlvNFlaYXdhWDRuclJKTnpGb2k5bkJ2RS9mVGpySThjaUR2RUVYR1pHSlNVNzlJL3hOK01mMkd4MnMwbHpPTW5ybWJ1Qis0V3U5OHU2dWZ4R3hQc1pHNkE5Ym9EaUp0Sk9za09JTFlMK243R2IvTzVLYlExNGlQeHF0ajFtTmdxYXFnNlVnTWdYcVo0QW5Bcm4vZnpPSUs0MWdJd3pLTzVYUUVFc1ZxdE1TUU9qNDlNQkhwVm0rdGNmWUhVV3UrVXVPMzl0VDR6T3gvL2dnNmdBK2dBT29CWjJqODJJYlNKWld0OXRBQUFBQUJKUlU1RXJrSmdnZz09IiwibWVkaWF0eXBlIjoiaW1hZ2UvcG5nIn1dLCJpbnN0YWxsIjp7InNwZWMiOnsiY2x1c3RlclBlcm1pc3Npb25zIjpbeyJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlYWNjb3VudHMiXSwidmVyYnMiOlsiKiJdfSx7ImFwaUdyb3VwcyI6WyJhcGlleHRlbnNpb25zLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbImRhZW1vbnNldHMiXSwidmVyYnMiOlsiKiJdfSx7ImFwaUdyb3VwcyI6WyJhcHBzIl0sInJlc291cmNlcyI6WyJkZXBsb3ltZW50cyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbImNvbmZpZy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJvcGVyYXRvcnMiXSwidmVyYnMiOlsiZ2V0Il19LHsiYXBpR3JvdXBzIjpbImNvbmZpZy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJ2ZXJzaW9ucyJdLCJ2ZXJicyI6WyJsaXN0Il19LHsiYXBpR3JvdXBzIjpbIm1hY2hpbmVjb25maWd1cmF0aW9uLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsia3ViZWxldGNvbmZpZ3MiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIm1hY2hpbmVjb25maWd1cmF0aW9uLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsia3ViZWxldGNvbmZpZ3MvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsibWFjaGluZWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJtYWNoaW5lY29uZmlncG9vbHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIm1hY2hpbmVjb25maWd1cmF0aW9uLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsibWFjaGluZWNvbmZpZ3MiXSwidmVyYnMiOlsiKiJdfSx7ImFwaUdyb3VwcyI6WyJub2RldG9wb2xvZ3kub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJudW1hcmVzb3VyY2Vzb3BlcmF0b3JzIl0sInZlcmJzIjpbIioiXX0seyJhcGlHcm91cHMiOlsibm9kZXRvcG9sb2d5Lm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsibnVtYXJlc291cmNlc29wZXJhdG9ycy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJub2RldG9wb2xvZ3kub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJudW1hcmVzb3VyY2Vzb3BlcmF0b3JzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJub2RldG9wb2xvZ3kub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJudW1hcmVzb3VyY2Vzc2NoZWR1bGVycyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJub2RldG9wb2xvZ3kub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJudW1hcmVzb3VyY2Vzc2NoZWR1bGVycy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJub2RldG9wb2xvZ3kub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJudW1hcmVzb3VyY2Vzc2NoZWR1bGVycy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY2x1c3RlcnJvbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJyb2xlcyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInJvbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInJvbGVzIl0sInZlcmJzIjpbIioiXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHkub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJzZWN1cml0eWNvbnRleHRjb25zdHJhaW50cyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbInRvcG9sb2d5Lm5vZGUuazhzLmlvIl0sInJlc291cmNlcyI6WyJub2RlcmVzb3VyY2V0b3BvbG9naWVzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiXX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJudW1hcmVzb3VyY2VzLWNvbnRyb2xsZXItbWFuYWdlciJ9XSwiZGVwbG95bWVudHMiOlt7ImxhYmVsIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im51bWFyZXNvdXJjZXMtY29udHJvbGxlci1tYW5hZ2VyIiwic3BlYyI6eyJyZXBsaWNhcyI6MSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RyYXRlZ3kiOnt9LCJ0ZW1wbGF0ZSI6eyJtZXRhZGF0YSI6eyJhbm5vdGF0aW9ucyI6eyJ0YXJnZXQud29ya2xvYWQub3BlbnNoaWZ0LmlvL21hbmFnZW1lbnQiOiJ7XCJlZmZlY3RcIjogXCJQcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nXCJ9In0sImxhYmVscyI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzcGVjIjp7ImFmZmluaXR5Ijp7Im5vZGVBZmZpbml0eSI6eyJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7Im5vZGVTZWxlY3RvclRlcm1zIjpbeyJtYXRjaEV4cHJlc3Npb25zIjpbeyJrZXkiOiJub2RlLXJvbGUua3ViZXJuZXRlcy5pby9tYXN0ZXIiLCJvcGVyYXRvciI6IkV4aXN0cyJ9XX1dfX19LCJjb250YWluZXJzIjpbeyJhcmdzIjpbIi0tdj00IiwiLS1sZWFkZXItZWxlY3QiLCItLWVuYWJsZS1zY2hlZHVsZXIiXSwiY29tbWFuZCI6WyIvYmluL251bWFyZXNvdXJjZXMtb3BlcmF0b3IiXSwiZW52IjpbeyJuYW1lIjoiUE9ETkFNRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5uYW1lIn19fSx7Im5hbWUiOiJOQU1FU1BBQ0UiLCJ2YWx1ZUZyb20iOnsiZmllbGRSZWYiOnsiZmllbGRQYXRoIjoibWV0YWRhdGEubmFtZXNwYWNlIn19fV0sImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL29wZW5zaGlmdDQvbnVtYXJlc291cmNlcy1yaGVsOC1vcGVyYXRvckBzaGEyNTY6NTBiOTcwMDBhOWVkYjllOTE1NTk3MTRhZjFkZjQ2MDQ5MTJkYzE5M2U4YWQ4OGM1ZjEwNjg3NzU4OTczMjgwOCIsImxpdmVuZXNzUHJvYmUiOnsiaHR0cEdldCI6eyJwYXRoIjoiL2hlYWx0aHoiLCJwb3J0Ijo4MDgxfSwiaW5pdGlhbERlbGF5U2Vjb25kcyI6MTUsInBlcmlvZFNlY29uZHMiOjIwfSwibmFtZSI6Im1hbmFnZXIiLCJyZWFkaW5lc3NQcm9iZSI6eyJodHRwR2V0Ijp7InBhdGgiOiIvcmVhZHl6IiwicG9ydCI6ODA4MX0sImluaXRpYWxEZWxheVNlY29uZHMiOjUsInBlcmlvZFNlY29uZHMiOjEwfSwicmVzb3VyY2VzIjp7InJlcXVlc3RzIjp7ImNwdSI6IjEwMG0iLCJtZW1vcnkiOiIyME1pIn19LCJzZWN1cml0eUNvbnRleHQiOnsiYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uIjpmYWxzZX19XSwic2VjdXJpdHlDb250ZXh0Ijp7InJ1bkFzTm9uUm9vdCI6dHJ1ZX0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im51bWFyZXNvdXJjZXMtY29udHJvbGxlci1tYW5hZ2VyIiwidGVybWluYXRpb25HcmFjZVBlcmlvZFNlY29uZHMiOjEwLCJ0b2xlcmF0aW9ucyI6W3siZWZmZWN0IjoiTm9TY2hlZHVsZSIsImtleSI6Im5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL21hc3RlciJ9XX19fX1dLCJwZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsInBhdGNoIl19XSwic2VydmljZUFjY291bnROYW1lIjoibnVtYXJlc291cmNlcy1jb250cm9sbGVyLW1hbmFnZXIifV19LCJzdHJhdGVneSI6ImRlcGxveW1lbnQifSwiaW5zdGFsbE1vZGVzIjpbeyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJPd25OYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6dHJ1ZSwidHlwZSI6IlNpbmdsZU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6Ik11bHRpTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOmZhbHNlLCJ0eXBlIjoiQWxsTmFtZXNwYWNlcyJ9XSwia2V5d29yZHMiOlsiUlRFIiwiTlVNQSJdLCJsaW5rcyI6W3sibmFtZSI6Ik51bWFyZXNvdXJjZXMgT3BlcmF0b3IiLCJ1cmwiOiJodHRwczovL2dpdGh1Yi5jb20vb3BlbnNoaWZ0LWtuaS9udW1hcmVzb3VyY2VzLW9wZXJhdG9yIn1dLCJtYWludGFpbmVycyI6W3siZW1haWwiOiJmcm9tYW5pQHJlZGhhdC5jb20iLCJuYW1lIjoiZnJvbWFuaSJ9XSwibWF0dXJpdHkiOiJzdGFibGUiLCJtaW5LdWJlVmVyc2lvbiI6IjEuMjMuMCIsInByb3ZpZGVyIjp7Im5hbWUiOiJSZWQgSGF0In0sInJlbGF0ZWRJbWFnZXMiOlt7ImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL29wZW5zaGlmdDQvbnVtYXJlc291cmNlcy1yaGVsOC1vcGVyYXRvckBzaGEyNTY6NTBiOTcwMDBhOWVkYjllOTE1NTk3MTRhZjFkZjQ2MDQ5MTJkYzE5M2U4YWQ4OGM1ZjEwNjg3NzU4OTczMjgwOCIsIm5hbWUiOiJtYW5hZ2VyIn1dLCJyZXBsYWNlcyI6Im51bWFyZXNvdXJjZXMtb3BlcmF0b3IudjQuMTIuMTIiLCJ2ZXJzaW9uIjoiNC4xMi4xMyJ9fQ==
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:fbe3a73849afb38d1d473a4282cd5ad66f47029e0ba94fdfaa7bdd75ee8e6864
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel8-operator@sha256:50b97000a9edb9e91559714af1df4604912dc193e8ad88c5f106877589732808
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:eb4f5c076b96d96b0c1d53849c40dd68ef9da1437c2353c92c510caf7affcb6e
name: numaresources-operator.v4.12.14
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.12.14
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:eb4f5c076b96d96b0c1d53849c40dd68ef9da1437c2353c92c510caf7affcb6e
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel8-operator@sha256:9052f8fc8087e05254d98af31d843f28f5e7d6e0ebc02f9e064abe4295ad0412
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:d058f59dbc21e6b015de06bad2d42e2cec078cbbc80a76fe2f914d641caaef7b
name: numaresources-operator.v4.12.6
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.12.6
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:d058f59dbc21e6b015de06bad2d42e2cec078cbbc80a76fe2f914d641caaef7b
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel8-operator@sha256:2fa908d4af73e9fc777bfaf6f5ce605c405e0f1a3bcc76ca4d057ae0441f124e
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:d50a87f4b8bb430065aa2be56a3391bc20e94ce5a622d029d3f34316dc0cdeec
name: numaresources-operator.v4.12.8
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.12.8
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJudW1hcmVzb3VyY2Vzb3BlcmF0b3JzLm5vZGV0b3BvbG9neS5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6Im5vZGV0b3BvbG9neS5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiTlVNQVJlc291cmNlc09wZXJhdG9yIiwibGlzdEtpbmQiOiJOVU1BUmVzb3VyY2VzT3BlcmF0b3JMaXN0IiwicGx1cmFsIjoibnVtYXJlc291cmNlc29wZXJhdG9ycyIsInNob3J0TmFtZXMiOlsibnVtYXJlc29wIl0sInNpbmd1bGFyIjoibnVtYXJlc291cmNlc29wZXJhdG9yIn0sInNjb3BlIjoiQ2x1c3RlciIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTlVNQVJlc291cmNlc09wZXJhdG9yIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBudW1hcmVzb3VyY2Vzb3BlcmF0b3JzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiTlVNQVJlc291cmNlc09wZXJhdG9yU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIE5VTUFSZXNvdXJjZXNPcGVyYXRvciIsInByb3BlcnRpZXMiOnsiaW1hZ2VTcGVjIjp7ImRlc2NyaXB0aW9uIjoiT3B0aW9uYWwgUmVzb3VyY2UgVG9wb2xvZ3kgRXhwb3J0ZXIgaW1hZ2UgVVJMIiwidHlwZSI6InN0cmluZyJ9LCJsb2dMZXZlbCI6eyJkZWZhdWx0IjoiTm9ybWFsIiwiZGVzY3JpcHRpb24iOiJWYWxpZCB2YWx1ZXMgYXJlOiBcIk5vcm1hbFwiLCBcIkRlYnVnXCIsIFwiVHJhY2VcIiwgXCJUcmFjZUFsbFwiLiBEZWZhdWx0cyB0byBcIk5vcm1hbFwiLiIsImVudW0iOlsiIiwiTm9ybWFsIiwiRGVidWciLCJUcmFjZSIsIlRyYWNlQWxsIl0sInR5cGUiOiJzdHJpbmcifSwibm9kZUdyb3VwcyI6eyJkZXNjcmlwdGlvbiI6Ikdyb3VwIG9mIE5vZGVzIHRvIGVuYWJsZSBSVEUgb24iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik5vZGVHcm91cCBkZWZpbmVzIGdyb3VwIG9mIG5vZGVzIHRoYXQgd2lsbCBydW4gcmVzb3VyY2UgdG9wb2xvZ3kgZXhwb3J0ZXIgZGFlbW9uIHNldCBZb3UgY2FuIGNob29zZSB0aGUgZ3JvdXAgb2Ygbm9kZSBieSBNYWNoaW5lQ29uZmlnUG9vbFNlbGVjdG9yIG9yIGJ5IE5vZGVTZWxlY3RvciIsInByb3BlcnRpZXMiOnsiY29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiQ29uZmlnIGRlZmluZXMgdGhlIFJURSBiZWhhdmlvdXIgZm9yIHRoaXMgTm9kZUdyb3VwIiwicHJvcGVydGllcyI6eyJpbmZvUmVmcmVzaE1vZGUiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaE1vZGUgc2V0cyB0aGUgbWVjaGFuaXNtIHdoaWNoIHdpbGwgYmUgdXNlZCB0byByZWZyZXNoIHRoZSB0b3BvbG9neSBpbmZvLiIsImVudW0iOlsiUGVyaW9kaWMiLCJFdmVudHMiLCJQZXJpb2RpY0FuZEV2ZW50cyJdLCJ0eXBlIjoic3RyaW5nIn0sImluZm9SZWZyZXNoUGVyaW9kIjp7ImRlc2NyaXB0aW9uIjoiSW5mb1JlZnJlc2hQZXJpb2Qgc2V0cyB0aGUgdG9wb2xvZ3kgaW5mbyByZWZyZXNoIHBlcmlvZC4gVXNlIGV4cGxpY2l0IDAgdG8gZGlzYWJsZS4iLCJ0eXBlIjoic3RyaW5nIn0sInBvZHNGaW5nZXJwcmludGluZyI6eyJkZXNjcmlwdGlvbiI6IlBvZHNGaW5nZXJwcmludGluZyBkZWZpbmVzIGlmIHBvZCBmaW5nZXJwcmludCBzaG91bGQgYmUgcmVwb3J0ZWQgZm9yIHRoZSBtYWNoaW5lcyBiZWxvbmdpbmcgdG8gdGhpcyBncm91cCIsImVudW0iOlsiRGlzYWJsZWQiLCJFbmFibGVkIiwiRW5hYmxlZEV4Y2x1c2l2ZVJlc291cmNlcyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sIm1hY2hpbmVDb25maWdQb29sU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJNYWNoaW5lQ29uZmlnUG9vbFNlbGVjdG9yIGRlZmluZXMgbGFiZWwgc2VsZWN0b3IgZm9yIHRoZSBtYWNoaW5lIGNvbmZpZyBwb29sIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVscyBtYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGUgb3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwicG9kRXhjbHVkZXMiOnsiZGVzY3JpcHRpb24iOiJPcHRpb25hbCBOYW1lc3BhY2UvTmFtZSBnbG9iIHBhdHRlcm5zIG9mIHBvZCB0byBpZ25vcmUgYXQgbm9kZSBsZXZlbCIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlZE5hbWUgY29tcHJpc2VzIGEgcmVzb3VyY2UgbmFtZSwgd2l0aCBhIG1hbmRhdG9yeSBuYW1lc3BhY2UsIHJlbmRlcmVkIGFzIFwiXHUwMDNjbmFtZXNwYWNlXHUwMDNlL1x1MDAzY25hbWVcdTAwM2VcIi4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTlVNQVJlc291cmNlc09wZXJhdG9yU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE5VTUFSZXNvdXJjZXNPcGVyYXRvciIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgc2hvdyB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgTlVNQVJlc291cmNlc09wZXJhdG9yIE9wZXJhdG9yIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb24gY29udGFpbnMgZGV0YWlscyBmb3Igb25lIGFzcGVjdCBvZiB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGlzIEFQSSBSZXNvdXJjZS4gLS0tIFRoaXMgc3RydWN0IGlzIGludGVuZGVkIGZvciBkaXJlY3QgdXNlIGFzIGFuIGFycmF5IGF0IHRoZSBmaWVsZCBwYXRoIC5zdGF0dXMuY29uZGl0aW9ucy4gIEZvciBleGFtcGxlLCBcbiB0eXBlIEZvb1N0YXR1cyBzdHJ1Y3R7IC8vIFJlcHJlc2VudHMgdGhlIG9ic2VydmF0aW9ucyBvZiBhIGZvbydzIGN1cnJlbnQgc3RhdGUuIC8vIEtub3duIC5zdGF0dXMuY29uZGl0aW9ucy50eXBlIGFyZTogXCJBdmFpbGFibGVcIiwgXCJQcm9ncmVzc2luZ1wiLCBhbmQgXCJEZWdyYWRlZFwiIC8vICtwYXRjaE1lcmdlS2V5PXR5cGUgLy8gK3BhdGNoU3RyYXRlZ3k9bWVyZ2UgLy8gK2xpc3RUeXBlPW1hcCAvLyArbGlzdE1hcEtleT10eXBlIENvbmRpdGlvbnMgW11tZXRhdjEuQ29uZGl0aW9uIGBqc29uOlwiY29uZGl0aW9ucyxvbWl0ZW1wdHlcIiBwYXRjaFN0cmF0ZWd5OlwibWVyZ2VcIiBwYXRjaE1lcmdlS2V5OlwidHlwZVwiIHByb3RvYnVmOlwiYnl0ZXMsMSxyZXAsbmFtZT1jb25kaXRpb25zXCJgIFxuIC8vIG90aGVyIGZpZWxkcyB9IiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJsYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGUgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci4gVGhpcyBzaG91bGQgYmUgd2hlbiB0aGUgdW5kZXJseWluZyBjb25kaXRpb24gY2hhbmdlZC4gIElmIHRoYXQgaXMgbm90IGtub3duLCB0aGVuIHVzaW5nIHRoZSB0aW1lIHdoZW4gdGhlIEFQSSBmaWVsZCBjaGFuZ2VkIGlzIGFjY2VwdGFibGUuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoibWVzc2FnZSBpcyBhIGh1bWFuIHJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IHRoZSB0cmFuc2l0aW9uLiBUaGlzIG1heSBiZSBhbiBlbXB0eSBzdHJpbmcuIiwibWF4TGVuZ3RoIjozMjc2OCwidHlwZSI6InN0cmluZyJ9LCJvYnNlcnZlZEdlbmVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJvYnNlcnZlZEdlbmVyYXRpb24gcmVwcmVzZW50cyB0aGUgLm1ldGFkYXRhLmdlbmVyYXRpb24gdGhhdCB0aGUgY29uZGl0aW9uIHdhcyBzZXQgYmFzZWQgdXBvbi4gRm9yIGluc3RhbmNlLCBpZiAubWV0YWRhdGEuZ2VuZXJhdGlvbiBpcyBjdXJyZW50bHkgMTIsIGJ1dCB0aGUgLnN0YXR1cy5jb25kaXRpb25zW3hdLm9ic2VydmVkR2VuZXJhdGlvbiBpcyA5LCB0aGUgY29uZGl0aW9uIGlzIG91dCBvZiBkYXRlIHdpdGggcmVzcGVjdCB0byB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgaW5zdGFuY2UuIiwiZm9ybWF0IjoiaW50NjQiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJyZWFzb24gY29udGFpbnMgYSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBpbmRpY2F0aW5nIHRoZSByZWFzb24gZm9yIHRoZSBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24uIFByb2R1Y2VycyBvZiBzcGVjaWZpYyBjb25kaXRpb24gdHlwZXMgbWF5IGRlZmluZSBleHBlY3RlZCB2YWx1ZXMgYW5kIG1lYW5pbmdzIGZvciB0aGlzIGZpZWxkLCBhbmQgd2hldGhlciB0aGUgdmFsdWVzIGFyZSBjb25zaWRlcmVkIGEgZ3VhcmFudGVlZCBBUEkuIFRoZSB2YWx1ZSBzaG91bGQgYmUgYSBDYW1lbENhc2Ugc3RyaW5nLiBUaGlzIGZpZWxkIG1heSBub3QgYmUgZW1wdHkuIiwibWF4TGVuZ3RoIjoxMDI0LCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW0EtWmEtel0oW0EtWmEtejAtOV8sOl0qW0EtWmEtejAtOV9dKT8kIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mIFRydWUsIEZhbHNlLCBVbmtub3duLiIsImVudW0iOlsiVHJ1ZSIsIkZhbHNlIiwiVW5rbm93biJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIG9mIGNvbmRpdGlvbiBpbiBDYW1lbENhc2Ugb3IgaW4gZm9vLmV4YW1wbGUuY29tL0NhbWVsQ2FzZS4gLS0tIE1hbnkgLmNvbmRpdGlvbi50eXBlIHZhbHVlcyBhcmUgY29uc2lzdGVudCBhY3Jvc3MgcmVzb3VyY2VzIGxpa2UgQXZhaWxhYmxlLCBidXQgYmVjYXVzZSBhcmJpdHJhcnkgY29uZGl0aW9ucyBjYW4gYmUgdXNlZnVsIChzZWUgLm5vZGUuc3RhdHVzLmNvbmRpdGlvbnMpLCB0aGUgYWJpbGl0eSB0byBkZWNvbmZsaWN0IGlzIGltcG9ydGFudC4gVGhlIHJlZ2V4IGl0IG1hdGNoZXMgaXMgKGRuczExMjNTdWJkb21haW5GbXQvKT8ocXVhbGlmaWVkTmFtZUZtdCkiLCJtYXhMZW5ndGgiOjMxNiwicGF0dGVybiI6Il4oW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8oXFwuW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8pKi8pPygoW0EtWmEtejAtOV1bLUEtWmEtejAtOV8uXSopP1tBLVphLXowLTldKSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJtZXNzYWdlIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJkYWVtb25zZXRzIjp7ImRlc2NyaXB0aW9uIjoiRGFlbW9uU2V0cyBvZiB0aGUgY29uZmlndXJlZCBSVEVzLCBvbmUgcGVyIG5vZGUgZ3JvdXAiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZWROYW1lIGNvbXByaXNlcyBhIHJlc291cmNlIG5hbWUsIHdpdGggYSBtYW5kYXRvcnkgbmFtZXNwYWNlLCByZW5kZXJlZCBhcyBcIlx1MDAzY25hbWVzcGFjZVx1MDAzZS9cdTAwM2NuYW1lXHUwMDNlXCIuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hY2hpbmVjb25maWdwb29scyI6eyJkZXNjcmlwdGlvbiI6Ik1hY2hpbmVDb25maWdQb29scyByZXNvbHZlZCBmcm9tIGNvbmZpZ3VyZWQgbm9kZSBncm91cHMiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik1hY2hpbmVDb25maWdQb29sIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIGVhY2ggTWFjaGluZUNvbmZpZ1Bvb2wgc2VsZWN0ZWQgYnkgbm9kZSBncm91cHMiLCJwcm9wZXJ0aWVzIjp7ImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIHJlcHJlc2VudHMgdGhlIGxhdGVzdCBhdmFpbGFibGUgb2JzZXJ2YXRpb25zIG9mIE1hY2hpbmVDb25maWdQb29sIGN1cnJlbnQgc3RhdGUuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJNYWNoaW5lQ29uZmlnUG9vbENvbmRpdGlvbiBjb250YWlucyBjb25kaXRpb24gaW5mb3JtYXRpb24gZm9yIGFuIE1hY2hpbmVDb25maWdQb29sLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoibGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSB0aW1lc3RhbXAgY29ycmVzcG9uZGluZyB0byB0aGUgbGFzdCBzdGF0dXMgY2hhbmdlIG9mIHRoaXMgY29uZGl0aW9uLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgZGVzY3JpcHRpb24gb2YgdGhlIGRldGFpbHMgb2YgdGhlIGxhc3QgdHJhbnNpdGlvbiwgY29tcGxlbWVudGluZyByZWFzb24uIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJyZWFzb24gaXMgYSBicmllZiBtYWNoaW5lIHJlYWRhYmxlIGV4cGxhbmF0aW9uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoic3RhdHVzIG9mIHRoZSBjb25kaXRpb24sIG9uZSBvZiAoJ1RydWUnLCAnRmFsc2UnLCAnVW5rbm93bicpLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgb2YgdGhlIGNvbmRpdGlvbiwgY3VycmVudGx5ICgnRG9uZScsICdVcGRhdGluZycsICdGYWlsZWQnKS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJtZXNzYWdlIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJjb25maWciOnsiZGVzY3JpcHRpb24iOiJOb2RlR3JvdXBDb25maWcgcmVwcmVzZW50cyB0aGUgbGF0ZXN0IGF2YWlsYWJsZSBjb25maWd1cmF0aW9uIGFwcGxpZWQgdG8gdGhpcyBNYWNoaW5lQ29uZmlnUG9vbCIsInByb3BlcnRpZXMiOnsiaW5mb1JlZnJlc2hNb2RlIjp7ImRlc2NyaXB0aW9uIjoiSW5mb1JlZnJlc2hNb2RlIHNldHMgdGhlIG1lY2hhbmlzbSB3aGljaCB3aWxsIGJlIHVzZWQgdG8gcmVmcmVzaCB0aGUgdG9wb2xvZ3kgaW5mby4iLCJlbnVtIjpbIlBlcmlvZGljIiwiRXZlbnRzIiwiUGVyaW9kaWNBbmRFdmVudHMiXSwidHlwZSI6InN0cmluZyJ9LCJpbmZvUmVmcmVzaFBlcmlvZCI6eyJkZXNjcmlwdGlvbiI6IkluZm9SZWZyZXNoUGVyaW9kIHNldHMgdGhlIHRvcG9sb2d5IGluZm8gcmVmcmVzaCBwZXJpb2QuIFVzZSBleHBsaWNpdCAwIHRvIGRpc2FibGUuIiwidHlwZSI6InN0cmluZyJ9LCJwb2RzRmluZ2VycHJpbnRpbmciOnsiZGVzY3JpcHRpb24iOiJQb2RzRmluZ2VycHJpbnRpbmcgZGVmaW5lcyBpZiBwb2QgZmluZ2VycHJpbnQgc2hvdWxkIGJlIHJlcG9ydGVkIGZvciB0aGUgbWFjaGluZXMgYmVsb25naW5nIHRvIHRoaXMgZ3JvdXAiLCJlbnVtIjpbIkRpc2FibGVkIiwiRW5hYmxlZCIsIkVuYWJsZWRFeGNsdXNpdmVSZXNvdXJjZXMiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSB0aGUgbmFtZSBvZiB0aGUgbWFjaGluZSBjb25maWcgcG9vbCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fSx7Im5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJOVU1BUmVzb3VyY2VzT3BlcmF0b3IgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG51bWFyZXNvdXJjZXNvcGVyYXRvcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJOVU1BUmVzb3VyY2VzT3BlcmF0b3JTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTlVNQVJlc291cmNlc09wZXJhdG9yIiwicHJvcGVydGllcyI6eyJpbWFnZVNwZWMiOnsiZGVzY3JpcHRpb24iOiJPcHRpb25hbCBSZXNvdXJjZSBUb3BvbG9neSBFeHBvcnRlciBpbWFnZSBVUkwiLCJ0eXBlIjoic3RyaW5nIn0sImxvZ0xldmVsIjp7ImRlZmF1bHQiOiJOb3JtYWwiLCJkZXNjcmlwdGlvbiI6IlZhbGlkIHZhbHVlcyBhcmU6IFwiTm9ybWFsXCIsIFwiRGVidWdcIiwgXCJUcmFjZVwiLCBcIlRyYWNlQWxsXCIuIERlZmF1bHRzIHRvIFwiTm9ybWFsXCIuIiwiZW51bSI6WyIiLCJOb3JtYWwiLCJEZWJ1ZyIsIlRyYWNlIiwiVHJhY2VBbGwiXSwidHlwZSI6InN0cmluZyJ9LCJub2RlR3JvdXBzIjp7ImRlc2NyaXB0aW9uIjoiR3JvdXAgb2YgTm9kZXMgdG8gZW5hYmxlIFJURSBvbiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTm9kZUdyb3VwIGRlZmluZXMgZ3JvdXAgb2Ygbm9kZXMgdGhhdCB3aWxsIHJ1biByZXNvdXJjZSB0b3BvbG9neSBleHBvcnRlciBkYWVtb24gc2V0IFlvdSBjYW4gY2hvb3NlIHRoZSBncm91cCBvZiBub2RlIGJ5IE1hY2hpbmVDb25maWdQb29sU2VsZWN0b3Igb3IgYnkgTm9kZVNlbGVjdG9yIiwicHJvcGVydGllcyI6eyJjb25maWciOnsiZGVzY3JpcHRpb24iOiJDb25maWcgZGVmaW5lcyB0aGUgUlRFIGJlaGF2aW91ciBmb3IgdGhpcyBOb2RlR3JvdXAiLCJwcm9wZXJ0aWVzIjp7ImluZm9SZWZyZXNoTW9kZSI6eyJkZXNjcmlwdGlvbiI6IkluZm9SZWZyZXNoTW9kZSBzZXRzIHRoZSBtZWNoYW5pc20gd2hpY2ggd2lsbCBiZSB1c2VkIHRvIHJlZnJlc2ggdGhlIHRvcG9sb2d5IGluZm8uIiwiZW51bSI6WyJQZXJpb2RpYyIsIkV2ZW50cyIsIlBlcmlvZGljQW5kRXZlbnRzIl0sInR5cGUiOiJzdHJpbmcifSwiaW5mb1JlZnJlc2hQZXJpb2QiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaFBlcmlvZCBzZXRzIHRoZSB0b3BvbG9neSBpbmZvIHJlZnJlc2ggcGVyaW9kLiBVc2UgZXhwbGljaXQgMCB0byBkaXNhYmxlLiIsInR5cGUiOiJzdHJpbmcifSwicG9kc0ZpbmdlcnByaW50aW5nIjp7ImRlc2NyaXB0aW9uIjoiUG9kc0ZpbmdlcnByaW50aW5nIGRlZmluZXMgaWYgcG9kIGZpbmdlcnByaW50IHNob3VsZCBiZSByZXBvcnRlZCBmb3IgdGhlIG1hY2hpbmVzIGJlbG9uZ2luZyB0byB0aGlzIGdyb3VwIiwiZW51bSI6WyJFbmFibGVkIiwiRGlzYWJsZWQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkaXNhYmxlUG9kc0ZpbmdlcnByaW50aW5nIjp7ImRlc2NyaXB0aW9uIjoiRGlzYWJsZVBvZHNGaW5nZXJwcmludGluZyBkZWZpbmVzIGlmIHBvZCBmaW5nZXJwcmludCBzaG91bGQgYmUgb21pdHRlZCBmb3IgdGhlIG1hY2hpbmVzIGJlbG9uZ2luZyB0byB0aGlzIGdyb3VwIChERVBSRUNBVEVEOiB1c2UgQ29uZmlnIGluc3RlYWQpIiwidHlwZSI6ImJvb2xlYW4ifSwibWFjaGluZUNvbmZpZ1Bvb2xTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6Ik1hY2hpbmVDb25maWdQb29sU2VsZWN0b3IgZGVmaW5lcyBsYWJlbCBzZWxlY3RvciBmb3IgdGhlIG1hY2hpbmUgY29uZmlnIHBvb2wiLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzIG1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZSBvcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJwb2RFeGNsdWRlcyI6eyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIE5hbWVzcGFjZS9OYW1lIGdsb2IgcGF0dGVybnMgb2YgcG9kIHRvIGlnbm9yZSBhdCBub2RlIGxldmVsIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2VkTmFtZSBjb21wcmlzZXMgYSByZXNvdXJjZSBuYW1lLCB3aXRoIGEgbWFuZGF0b3J5IG5hbWVzcGFjZSwgcmVuZGVyZWQgYXMgXCJcdTAwM2NuYW1lc3BhY2VcdTAwM2UvXHUwMDNjbmFtZVx1MDAzZVwiLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJOVU1BUmVzb3VyY2VzT3BlcmF0b3JTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTlVNQVJlc291cmNlc09wZXJhdG9yIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBzaG93IHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBOVU1BUmVzb3VyY2VzT3BlcmF0b3IgT3BlcmF0b3IiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbiBjb250YWlucyBkZXRhaWxzIGZvciBvbmUgYXNwZWN0IG9mIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoaXMgQVBJIFJlc291cmNlLiAtLS0gVGhpcyBzdHJ1Y3QgaXMgaW50ZW5kZWQgZm9yIGRpcmVjdCB1c2UgYXMgYW4gYXJyYXkgYXQgdGhlIGZpZWxkIHBhdGggLnN0YXR1cy5jb25kaXRpb25zLiAgRm9yIGV4YW1wbGUsIFxuIHR5cGUgRm9vU3RhdHVzIHN0cnVjdHsgLy8gUmVwcmVzZW50cyB0aGUgb2JzZXJ2YXRpb25zIG9mIGEgZm9vJ3MgY3VycmVudCBzdGF0ZS4gLy8gS25vd24gLnN0YXR1cy5jb25kaXRpb25zLnR5cGUgYXJlOiBcIkF2YWlsYWJsZVwiLCBcIlByb2dyZXNzaW5nXCIsIGFuZCBcIkRlZ3JhZGVkXCIgLy8gK3BhdGNoTWVyZ2VLZXk9dHlwZSAvLyArcGF0Y2hTdHJhdGVneT1tZXJnZSAvLyArbGlzdFR5cGU9bWFwIC8vICtsaXN0TWFwS2V5PXR5cGUgQ29uZGl0aW9ucyBbXW1ldGF2MS5Db25kaXRpb24gYGpzb246XCJjb25kaXRpb25zLG9taXRlbXB0eVwiIHBhdGNoU3RyYXRlZ3k6XCJtZXJnZVwiIHBhdGNoTWVyZ2VLZXk6XCJ0eXBlXCIgcHJvdG9idWY6XCJieXRlcywxLHJlcCxuYW1lPWNvbmRpdGlvbnNcImAgXG4gLy8gb3RoZXIgZmllbGRzIH0iLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Imxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgbGFzdCB0aW1lIHRoZSBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiBUaGlzIHNob3VsZCBiZSB3aGVuIHRoZSB1bmRlcmx5aW5nIGNvbmRpdGlvbiBjaGFuZ2VkLiAgSWYgdGhhdCBpcyBub3Qga25vd24sIHRoZW4gdXNpbmcgdGhlIHRpbWUgd2hlbiB0aGUgQVBJIGZpZWxkIGNoYW5nZWQgaXMgYWNjZXB0YWJsZS4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgdGhlIHRyYW5zaXRpb24uIFRoaXMgbWF5IGJlIGFuIGVtcHR5IHN0cmluZy4iLCJtYXhMZW5ndGgiOjMyNzY4LCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiByZXByZXNlbnRzIHRoZSAubWV0YWRhdGEuZ2VuZXJhdGlvbiB0aGF0IHRoZSBjb25kaXRpb24gd2FzIHNldCBiYXNlZCB1cG9uLiBGb3IgaW5zdGFuY2UsIGlmIC5tZXRhZGF0YS5nZW5lcmF0aW9uIGlzIGN1cnJlbnRseSAxMiwgYnV0IHRoZSAuc3RhdHVzLmNvbmRpdGlvbnNbeF0ub2JzZXJ2ZWRHZW5lcmF0aW9uIGlzIDksIHRoZSBjb25kaXRpb24gaXMgb3V0IG9mIGRhdGUgd2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBpbnN0YW5jZS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBjb250YWlucyBhIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIGluZGljYXRpbmcgdGhlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi4gUHJvZHVjZXJzIG9mIHNwZWNpZmljIGNvbmRpdGlvbiB0eXBlcyBtYXkgZGVmaW5lIGV4cGVjdGVkIHZhbHVlcyBhbmQgbWVhbmluZ3MgZm9yIHRoaXMgZmllbGQsIGFuZCB3aGV0aGVyIHRoZSB2YWx1ZXMgYXJlIGNvbnNpZGVyZWQgYSBndWFyYW50ZWVkIEFQSS4gVGhlIHZhbHVlIHNob3VsZCBiZSBhIENhbWVsQ2FzZSBzdHJpbmcuIFRoaXMgZmllbGQgbWF5IG5vdCBiZSBlbXB0eS4iLCJtYXhMZW5ndGgiOjEwMjQsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bQS1aYS16XShbQS1aYS16MC05Xyw6XSpbQS1aYS16MC05X10pPyQiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgVHJ1ZSwgRmFsc2UsIFVua25vd24uIiwiZW51bSI6WyJUcnVlIiwiRmFsc2UiLCJVbmtub3duIl0sInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgb2YgY29uZGl0aW9uIGluIENhbWVsQ2FzZSBvciBpbiBmb28uZXhhbXBsZS5jb20vQ2FtZWxDYXNlLiAtLS0gTWFueSAuY29uZGl0aW9uLnR5cGUgdmFsdWVzIGFyZSBjb25zaXN0ZW50IGFjcm9zcyByZXNvdXJjZXMgbGlrZSBBdmFpbGFibGUsIGJ1dCBiZWNhdXNlIGFyYml0cmFyeSBjb25kaXRpb25zIGNhbiBiZSB1c2VmdWwgKHNlZSAubm9kZS5zdGF0dXMuY29uZGl0aW9ucyksIHRoZSBhYmlsaXR5IHRvIGRlY29uZmxpY3QgaXMgaW1wb3J0YW50LiBUaGUgcmVnZXggaXQgbWF0Y2hlcyBpcyAoZG5zMTEyM1N1YmRvbWFpbkZtdC8pPyhxdWFsaWZpZWROYW1lRm10KSIsIm1heExlbmd0aCI6MzE2LCJwYXR0ZXJuIjoiXihbYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPyhcXC5bYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPykqLyk/KChbQS1aYS16MC05XVstQS1aYS16MC05Xy5dKik/W0EtWmEtejAtOV0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsIm1lc3NhZ2UiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImRhZW1vbnNldHMiOnsiZGVzY3JpcHRpb24iOiJEYWVtb25TZXRzIG9mIHRoZSBjb25maWd1cmVkIFJURXMsIG9uZSBwZXIgbm9kZSBncm91cCIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlZE5hbWUgY29tcHJpc2VzIGEgcmVzb3VyY2UgbmFtZSwgd2l0aCBhIG1hbmRhdG9yeSBuYW1lc3BhY2UsIHJlbmRlcmVkIGFzIFwiXHUwMDNjbmFtZXNwYWNlXHUwMDNlL1x1MDAzY25hbWVcdTAwM2VcIi4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWFjaGluZWNvbmZpZ3Bvb2xzIjp7ImRlc2NyaXB0aW9uIjoiTWFjaGluZUNvbmZpZ1Bvb2xzIHJlc29sdmVkIGZyb20gY29uZmlndXJlZCBub2RlIGdyb3VwcyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTWFjaGluZUNvbmZpZ1Bvb2wgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgZWFjaCBNYWNoaW5lQ29uZmlnUG9vbCBzZWxlY3RlZCBieSBub2RlIGdyb3VwcyIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgcmVwcmVzZW50cyB0aGUgbGF0ZXN0IGF2YWlsYWJsZSBvYnNlcnZhdGlvbnMgb2YgTWFjaGluZUNvbmZpZ1Bvb2wgY3VycmVudCBzdGF0ZS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik1hY2hpbmVDb25maWdQb29sQ29uZGl0aW9uIGNvbnRhaW5zIGNvbmRpdGlvbiBpbmZvcm1hdGlvbiBmb3IgYW4gTWFjaGluZUNvbmZpZ1Bvb2wuIiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJsYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIHRpbWVzdGFtcCBjb3JyZXNwb25kaW5nIHRvIHRoZSBsYXN0IHN0YXR1cyBjaGFuZ2Ugb2YgdGhpcyBjb25kaXRpb24uIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwibnVsbGFibGUiOnRydWUsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Im1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBkZXNjcmlwdGlvbiBvZiB0aGUgZGV0YWlscyBvZiB0aGUgbGFzdCB0cmFuc2l0aW9uLCBjb21wbGVtZW50aW5nIHJlYXNvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBpcyBhIGJyaWVmIG1hY2hpbmUgcmVhZGFibGUgZXhwbGFuYXRpb24gZm9yIHRoZSBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mICgnVHJ1ZScsICdGYWxzZScsICdVbmtub3duJykuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBvZiB0aGUgY29uZGl0aW9uLCBjdXJyZW50bHkgKCdEb25lJywgJ1VwZGF0aW5nJywgJ0ZhaWxlZCcpLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsIm1lc3NhZ2UiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImNvbmZpZyI6eyJkZXNjcmlwdGlvbiI6Ik5vZGVHcm91cENvbmZpZyByZXByZXNlbnRzIHRoZSBsYXRlc3QgYXZhaWxhYmxlIGNvbmZpZ3VyYXRpb24gYXBwbGllZCB0byB0aGlzIE1hY2hpbmVDb25maWdQb29sIiwicHJvcGVydGllcyI6eyJpbmZvUmVmcmVzaE1vZGUiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaE1vZGUgc2V0cyB0aGUgbWVjaGFuaXNtIHdoaWNoIHdpbGwgYmUgdXNlZCB0byByZWZyZXNoIHRoZSB0b3BvbG9neSBpbmZvLiIsImVudW0iOlsiUGVyaW9kaWMiLCJFdmVudHMiLCJQZXJpb2RpY0FuZEV2ZW50cyJdLCJ0eXBlIjoic3RyaW5nIn0sImluZm9SZWZyZXNoUGVyaW9kIjp7ImRlc2NyaXB0aW9uIjoiSW5mb1JlZnJlc2hQZXJpb2Qgc2V0cyB0aGUgdG9wb2xvZ3kgaW5mbyByZWZyZXNoIHBlcmlvZC4gVXNlIGV4cGxpY2l0IDAgdG8gZGlzYWJsZS4iLCJ0eXBlIjoic3RyaW5nIn0sInBvZHNGaW5nZXJwcmludGluZyI6eyJkZXNjcmlwdGlvbiI6IlBvZHNGaW5nZXJwcmludGluZyBkZWZpbmVzIGlmIHBvZCBmaW5nZXJwcmludCBzaG91bGQgYmUgcmVwb3J0ZWQgZm9yIHRoZSBtYWNoaW5lcyBiZWxvbmdpbmcgdG8gdGhpcyBncm91cCIsImVudW0iOlsiRW5hYmxlZCIsIkRpc2FibGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgdGhlIG5hbWUgb2YgdGhlIG1hY2hpbmUgY29uZmlnIHBvb2wiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOmZhbHNlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:d50a87f4b8bb430065aa2be56a3391bc20e94ce5a622d029d3f34316dc0cdeec
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel8-operator@sha256:078ab27c1f8d4592c846b7b2722fa0e51f2c116333b8826bf0cbbc14fcc3d82f
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:f3993c2e6cd60f526e1a1053b64a6ee85072869a7b3970205bc3e77836bddacd
name: numaresources-operator.v4.12.9
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.12.9
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJudW1hcmVzb3VyY2Vzc2NoZWR1bGVycy5ub2RldG9wb2xvZ3kub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJub2RldG9wb2xvZ3kub3BlbnNoaWZ0LmlvIiwibmFtZXMiOnsia2luZCI6Ik5VTUFSZXNvdXJjZXNTY2hlZHVsZXIiLCJsaXN0S2luZCI6Ik5VTUFSZXNvdXJjZXNTY2hlZHVsZXJMaXN0IiwicGx1cmFsIjoibnVtYXJlc291cmNlc3NjaGVkdWxlcnMiLCJzaG9ydE5hbWVzIjpbIm51bWFyZXNzY2hlZCJdLCJzaW5ndWxhciI6Im51bWFyZXNvdXJjZXNzY2hlZHVsZXIifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJOVU1BUmVzb3VyY2VzU2NoZWR1bGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBudW1hcmVzb3VyY2Vzc2NoZWR1bGVycyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik5VTUFSZXNvdXJjZXNTY2hlZHVsZXJTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTlVNQVJlc291cmNlc1NjaGVkdWxlciIsInByb3BlcnRpZXMiOnsiY2FjaGVSZXN5bmNEZWJ1ZyI6eyJkZXNjcmlwdGlvbiI6IlNldCB0aGUgY2FjaGUgcmVzeW5jIGRlYnVnIG9wdGlvbnMuIERlZmF1bHRzIHRvIGRpc2FibGUuIiwiZW51bSI6WyJEaXNhYmxlZCIsIkR1bXBKU09ORmlsZSJdLCJ0eXBlIjoic3RyaW5nIn0sImNhY2hlUmVzeW5jUGVyaW9kIjp7ImRlc2NyaXB0aW9uIjoiU2V0IHRoZSBjYWNoZSByZXN5bmMgcGVyaW9kLiBVc2UgZXhwbGljaXQgMCB0byBkaXNhYmxlLiIsInR5cGUiOiJzdHJpbmcifSwiaW1hZ2VTcGVjIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGVyIGNvbnRhaW5lciBpbWFnZSBVUkwiLCJ0eXBlIjoic3RyaW5nIn0sImxvZ0xldmVsIjp7ImRlZmF1bHQiOiJOb3JtYWwiLCJkZXNjcmlwdGlvbiI6IlZhbGlkIHZhbHVlcyBhcmU6IFwiTm9ybWFsXCIsIFwiRGVidWdcIiwgXCJUcmFjZVwiLCBcIlRyYWNlQWxsXCIuIERlZmF1bHRzIHRvIFwiTm9ybWFsXCIuIiwiZW51bSI6WyIiLCJOb3JtYWwiLCJEZWJ1ZyIsIlRyYWNlIiwiVHJhY2VBbGwiXSwidHlwZSI6InN0cmluZyJ9LCJzY2hlZHVsZXJJbmZvcm1lciI6eyJkZXNjcmlwdGlvbiI6IlNldCB0aGUgaW5mb3JtZXIgdHlwZSB0byBiZSB1c2VkIGJ5IHRoZSBzY2hlZHVsZXIgdG8gY29ubmVjdCB0byB0aGUgYXBpc2VydmVyLiBEZWZhdWx0cyB0byBkZWRpY2F0ZWQuIiwiZW51bSI6WyJTaGFyZWQiLCJEZWRpY2F0ZWQiXSwidHlwZSI6InN0cmluZyJ9LCJzY2hlZHVsZXJOYW1lIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGVyIG5hbWUgdG8gYmUgdXNlZCBpbiBwb2QgdGVtcGxhdGVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaW1hZ2VTcGVjIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTlVNQVJlc291cmNlc1NjaGVkdWxlclN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBOVU1BUmVzb3VyY2VzU2NoZWR1bGVyIiwicHJvcGVydGllcyI6eyJjYWNoZVJlc3luY1BlcmlvZCI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlUmVzeW5jUGVyaW9kIHNob3dzIHRoZSBjdXJyZW50IGNhY2hlIHJlc3luYyBwZXJpb2QiLCJ0eXBlIjoic3RyaW5nIn0sImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIHNob3cgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIE5VTUFSZXNvdXJjZXNPcGVyYXRvciBPcGVyYXRvciIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9uIGNvbnRhaW5zIGRldGFpbHMgZm9yIG9uZSBhc3BlY3Qgb2YgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhpcyBBUEkgUmVzb3VyY2UuIC0tLSBUaGlzIHN0cnVjdCBpcyBpbnRlbmRlZCBmb3IgZGlyZWN0IHVzZSBhcyBhbiBhcnJheSBhdCB0aGUgZmllbGQgcGF0aCAuc3RhdHVzLmNvbmRpdGlvbnMuICBGb3IgZXhhbXBsZSwgXG4gdHlwZSBGb29TdGF0dXMgc3RydWN0eyAvLyBSZXByZXNlbnRzIHRoZSBvYnNlcnZhdGlvbnMgb2YgYSBmb28ncyBjdXJyZW50IHN0YXRlLiAvLyBLbm93biAuc3RhdHVzLmNvbmRpdGlvbnMudHlwZSBhcmU6IFwiQXZhaWxhYmxlXCIsIFwiUHJvZ3Jlc3NpbmdcIiwgYW5kIFwiRGVncmFkZWRcIiAvLyArcGF0Y2hNZXJnZUtleT10eXBlIC8vICtwYXRjaFN0cmF0ZWd5PW1lcmdlIC8vICtsaXN0VHlwZT1tYXAgLy8gK2xpc3RNYXBLZXk9dHlwZSBDb25kaXRpb25zIFtdbWV0YXYxLkNvbmRpdGlvbiBganNvbjpcImNvbmRpdGlvbnMsb21pdGVtcHR5XCIgcGF0Y2hTdHJhdGVneTpcIm1lcmdlXCIgcGF0Y2hNZXJnZUtleTpcInR5cGVcIiBwcm90b2J1ZjpcImJ5dGVzLDEscmVwLG5hbWU9Y29uZGl0aW9uc1wiYCBcbiAvLyBvdGhlciBmaWVsZHMgfSIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoibGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuIFRoaXMgc2hvdWxkIGJlIHdoZW4gdGhlIHVuZGVybHlpbmcgY29uZGl0aW9uIGNoYW5nZWQuICBJZiB0aGF0IGlzIG5vdCBrbm93biwgdGhlbiB1c2luZyB0aGUgdGltZSB3aGVuIHRoZSBBUEkgZmllbGQgY2hhbmdlZCBpcyBhY2NlcHRhYmxlLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Im1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCB0aGUgdHJhbnNpdGlvbi4gVGhpcyBtYXkgYmUgYW4gZW1wdHkgc3RyaW5nLiIsIm1heExlbmd0aCI6MzI3NjgsInR5cGUiOiJzdHJpbmcifSwib2JzZXJ2ZWRHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRHZW5lcmF0aW9uIHJlcHJlc2VudHMgdGhlIC5tZXRhZGF0YS5nZW5lcmF0aW9uIHRoYXQgdGhlIGNvbmRpdGlvbiB3YXMgc2V0IGJhc2VkIHVwb24uIEZvciBpbnN0YW5jZSwgaWYgLm1ldGFkYXRhLmdlbmVyYXRpb24gaXMgY3VycmVudGx5IDEyLCBidXQgdGhlIC5zdGF0dXMuY29uZGl0aW9uc1t4XS5vYnNlcnZlZEdlbmVyYXRpb24gaXMgOSwgdGhlIGNvbmRpdGlvbiBpcyBvdXQgb2YgZGF0ZSB3aXRoIHJlc3BlY3QgdG8gdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGluc3RhbmNlLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoicmVhc29uIGNvbnRhaW5zIGEgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgaW5kaWNhdGluZyB0aGUgcmVhc29uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLiBQcm9kdWNlcnMgb2Ygc3BlY2lmaWMgY29uZGl0aW9uIHR5cGVzIG1heSBkZWZpbmUgZXhwZWN0ZWQgdmFsdWVzIGFuZCBtZWFuaW5ncyBmb3IgdGhpcyBmaWVsZCwgYW5kIHdoZXRoZXIgdGhlIHZhbHVlcyBhcmUgY29uc2lkZXJlZCBhIGd1YXJhbnRlZWQgQVBJLiBUaGUgdmFsdWUgc2hvdWxkIGJlIGEgQ2FtZWxDYXNlIHN0cmluZy4gVGhpcyBmaWVsZCBtYXkgbm90IGJlIGVtcHR5LiIsIm1heExlbmd0aCI6MTAyNCwibWluTGVuZ3RoIjoxLCJwYXR0ZXJuIjoiXltBLVphLXpdKFtBLVphLXowLTlfLDpdKltBLVphLXowLTlfXSk/JCIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoic3RhdHVzIG9mIHRoZSBjb25kaXRpb24sIG9uZSBvZiBUcnVlLCBGYWxzZSwgVW5rbm93bi4iLCJlbnVtIjpbIlRydWUiLCJGYWxzZSIsIlVua25vd24iXSwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBvZiBjb25kaXRpb24gaW4gQ2FtZWxDYXNlIG9yIGluIGZvby5leGFtcGxlLmNvbS9DYW1lbENhc2UuIC0tLSBNYW55IC5jb25kaXRpb24udHlwZSB2YWx1ZXMgYXJlIGNvbnNpc3RlbnQgYWNyb3NzIHJlc291cmNlcyBsaWtlIEF2YWlsYWJsZSwgYnV0IGJlY2F1c2UgYXJiaXRyYXJ5IGNvbmRpdGlvbnMgY2FuIGJlIHVzZWZ1bCAoc2VlIC5ub2RlLnN0YXR1cy5jb25kaXRpb25zKSwgdGhlIGFiaWxpdHkgdG8gZGVjb25mbGljdCBpcyBpbXBvcnRhbnQuIFRoZSByZWdleCBpdCBtYXRjaGVzIGlzIChkbnMxMTIzU3ViZG9tYWluRm10Lyk/KHF1YWxpZmllZE5hbWVGbXQpIiwibWF4TGVuZ3RoIjozMTYsInBhdHRlcm4iOiJeKFthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KFxcLlthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KSovKT8oKFtBLVphLXowLTldWy1BLVphLXowLTlfLl0qKT9bQS1aYS16MC05XSkkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwibWVzc2FnZSIsInJlYXNvbiIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZGVwbG95bWVudCI6eyJkZXNjcmlwdGlvbiI6IkRlcGxveW1lbnQgb2YgdGhlIHNlY29uZGFyeSBzY2hlZHVsZXIsIG5hbWVzcGFjZWQgbmFtZSIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInNjaGVkdWxlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJTY2hlZHVsZXIgbmFtZSB0byBiZSB1c2VkIGluIHBvZCB0ZW1wbGF0ZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX0seyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTlVNQVJlc291cmNlc1NjaGVkdWxlciBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbnVtYXJlc291cmNlc3NjaGVkdWxlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJOVU1BUmVzb3VyY2VzU2NoZWR1bGVyU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIE5VTUFSZXNvdXJjZXNTY2hlZHVsZXIiLCJwcm9wZXJ0aWVzIjp7ImNhY2hlUmVzeW5jUGVyaW9kIjp7ImRlc2NyaXB0aW9uIjoiU2V0IHRoZSBjYWNoZSByZXN5bmMgcGVyaW9kLiBVc2UgZXhwbGljaXQgMCB0byBkaXNhYmxlLiIsInR5cGUiOiJzdHJpbmcifSwiaW1hZ2VTcGVjIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGVyIGNvbnRhaW5lciBpbWFnZSBVUkwiLCJ0eXBlIjoic3RyaW5nIn0sImxvZ0xldmVsIjp7ImRlZmF1bHQiOiJOb3JtYWwiLCJkZXNjcmlwdGlvbiI6IlZhbGlkIHZhbHVlcyBhcmU6IFwiTm9ybWFsXCIsIFwiRGVidWdcIiwgXCJUcmFjZVwiLCBcIlRyYWNlQWxsXCIuIERlZmF1bHRzIHRvIFwiTm9ybWFsXCIuIiwiZW51bSI6WyIiLCJOb3JtYWwiLCJEZWJ1ZyIsIlRyYWNlIiwiVHJhY2VBbGwiXSwidHlwZSI6InN0cmluZyJ9LCJzY2hlZHVsZXJOYW1lIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGVyIG5hbWUgdG8gYmUgdXNlZCBpbiBwb2QgdGVtcGxhdGVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaW1hZ2VTcGVjIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTlVNQVJlc291cmNlc1NjaGVkdWxlclN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBOVU1BUmVzb3VyY2VzU2NoZWR1bGVyIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBzaG93IHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBOVU1BUmVzb3VyY2VzT3BlcmF0b3IgT3BlcmF0b3IiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbiBjb250YWlucyBkZXRhaWxzIGZvciBvbmUgYXNwZWN0IG9mIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoaXMgQVBJIFJlc291cmNlLiAtLS0gVGhpcyBzdHJ1Y3QgaXMgaW50ZW5kZWQgZm9yIGRpcmVjdCB1c2UgYXMgYW4gYXJyYXkgYXQgdGhlIGZpZWxkIHBhdGggLnN0YXR1cy5jb25kaXRpb25zLiAgRm9yIGV4YW1wbGUsIFxuIHR5cGUgRm9vU3RhdHVzIHN0cnVjdHsgLy8gUmVwcmVzZW50cyB0aGUgb2JzZXJ2YXRpb25zIG9mIGEgZm9vJ3MgY3VycmVudCBzdGF0ZS4gLy8gS25vd24gLnN0YXR1cy5jb25kaXRpb25zLnR5cGUgYXJlOiBcIkF2YWlsYWJsZVwiLCBcIlByb2dyZXNzaW5nXCIsIGFuZCBcIkRlZ3JhZGVkXCIgLy8gK3BhdGNoTWVyZ2VLZXk9dHlwZSAvLyArcGF0Y2hTdHJhdGVneT1tZXJnZSAvLyArbGlzdFR5cGU9bWFwIC8vICtsaXN0TWFwS2V5PXR5cGUgQ29uZGl0aW9ucyBbXW1ldGF2MS5Db25kaXRpb24gYGpzb246XCJjb25kaXRpb25zLG9taXRlbXB0eVwiIHBhdGNoU3RyYXRlZ3k6XCJtZXJnZVwiIHBhdGNoTWVyZ2VLZXk6XCJ0eXBlXCIgcHJvdG9idWY6XCJieXRlcywxLHJlcCxuYW1lPWNvbmRpdGlvbnNcImAgXG4gLy8gb3RoZXIgZmllbGRzIH0iLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Imxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgbGFzdCB0aW1lIHRoZSBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiBUaGlzIHNob3VsZCBiZSB3aGVuIHRoZSB1bmRlcmx5aW5nIGNvbmRpdGlvbiBjaGFuZ2VkLiAgSWYgdGhhdCBpcyBub3Qga25vd24sIHRoZW4gdXNpbmcgdGhlIHRpbWUgd2hlbiB0aGUgQVBJIGZpZWxkIGNoYW5nZWQgaXMgYWNjZXB0YWJsZS4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgdGhlIHRyYW5zaXRpb24uIFRoaXMgbWF5IGJlIGFuIGVtcHR5IHN0cmluZy4iLCJtYXhMZW5ndGgiOjMyNzY4LCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiByZXByZXNlbnRzIHRoZSAubWV0YWRhdGEuZ2VuZXJhdGlvbiB0aGF0IHRoZSBjb25kaXRpb24gd2FzIHNldCBiYXNlZCB1cG9uLiBGb3IgaW5zdGFuY2UsIGlmIC5tZXRhZGF0YS5nZW5lcmF0aW9uIGlzIGN1cnJlbnRseSAxMiwgYnV0IHRoZSAuc3RhdHVzLmNvbmRpdGlvbnNbeF0ub2JzZXJ2ZWRHZW5lcmF0aW9uIGlzIDksIHRoZSBjb25kaXRpb24gaXMgb3V0IG9mIGRhdGUgd2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBpbnN0YW5jZS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBjb250YWlucyBhIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIGluZGljYXRpbmcgdGhlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi4gUHJvZHVjZXJzIG9mIHNwZWNpZmljIGNvbmRpdGlvbiB0eXBlcyBtYXkgZGVmaW5lIGV4cGVjdGVkIHZhbHVlcyBhbmQgbWVhbmluZ3MgZm9yIHRoaXMgZmllbGQsIGFuZCB3aGV0aGVyIHRoZSB2YWx1ZXMgYXJlIGNvbnNpZGVyZWQgYSBndWFyYW50ZWVkIEFQSS4gVGhlIHZhbHVlIHNob3VsZCBiZSBhIENhbWVsQ2FzZSBzdHJpbmcuIFRoaXMgZmllbGQgbWF5IG5vdCBiZSBlbXB0eS4iLCJtYXhMZW5ndGgiOjEwMjQsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bQS1aYS16XShbQS1aYS16MC05Xyw6XSpbQS1aYS16MC05X10pPyQiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgVHJ1ZSwgRmFsc2UsIFVua25vd24uIiwiZW51bSI6WyJUcnVlIiwiRmFsc2UiLCJVbmtub3duIl0sInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgb2YgY29uZGl0aW9uIGluIENhbWVsQ2FzZSBvciBpbiBmb28uZXhhbXBsZS5jb20vQ2FtZWxDYXNlLiAtLS0gTWFueSAuY29uZGl0aW9uLnR5cGUgdmFsdWVzIGFyZSBjb25zaXN0ZW50IGFjcm9zcyByZXNvdXJjZXMgbGlrZSBBdmFpbGFibGUsIGJ1dCBiZWNhdXNlIGFyYml0cmFyeSBjb25kaXRpb25zIGNhbiBiZSB1c2VmdWwgKHNlZSAubm9kZS5zdGF0dXMuY29uZGl0aW9ucyksIHRoZSBhYmlsaXR5IHRvIGRlY29uZmxpY3QgaXMgaW1wb3J0YW50LiBUaGUgcmVnZXggaXQgbWF0Y2hlcyBpcyAoZG5zMTEyM1N1YmRvbWFpbkZtdC8pPyhxdWFsaWZpZWROYW1lRm10KSIsIm1heExlbmd0aCI6MzE2LCJwYXR0ZXJuIjoiXihbYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPyhcXC5bYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPykqLyk/KChbQS1aYS16MC05XVstQS1aYS16MC05Xy5dKik/W0EtWmEtejAtOV0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsIm1lc3NhZ2UiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImRlcGxveW1lbnQiOnsiZGVzY3JpcHRpb24iOiJEZXBsb3ltZW50IG9mIHRoZSBzZWNvbmRhcnkgc2NoZWR1bGVyLCBuYW1lc3BhY2VkIG5hbWUiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzY2hlZHVsZXJOYW1lIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGVyIG5hbWUgdG8gYmUgdXNlZCBpbiBwb2QgdGVtcGxhdGVzIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:f3993c2e6cd60f526e1a1053b64a6ee85072869a7b3970205bc3e77836bddacd
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel8-operator@sha256:f87080f670ab61528fb39a1aacb6c35c0a736950747365fb9e0ddafca2a69bb2
  name: manager
schema: olm.bundle
