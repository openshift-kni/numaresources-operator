---
defaultChannel: "4.16"
icon:
  base64data: iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAYNJREFUWIXt1T9rlEEQx/HPnecJGoKJhY+NEgW5VrCxSZpr0oWUKcRgYSoLGwv1RfgWfAnWFlZWKQIRJE00V6XwTxQsdSwygWV5DEeaS/EMLDPP/Gaf/e7swz49hBlaf5aLdwAdQAfQAZwfgLa7OP4TT6tPMw/6TQaPK+EAcxhlXNs3NDngaaUvpx8XuRv4g+clAOzjBRZaFprGPuN1ldtoqXuEXWzWAEdYwvczAiylH6W/iCctdZt4hit4UAJcwDAT984IsYVPGa+26CsY4D3e4MOJ0BA7x99GjIkgesQXYo4YZawaX4nrRJNzFoi9nBvE/fTjrI8ciDvEEXGZGJSU79I/xN+Mf2Gx2s0lzOMnrmbuB+4Wu98u6ufxGxPsZG6A9boDiJtJOskOILYL+n7Gb/O5KbQ14iPxqtj1mNgqaqg6UgMgXqZ4AnArn/fzOIK41gIwzKO5XQEEsVqtMSQOj49MBHpVm+tcfYHUWu+UuO39tT4zOx//gg6gA+gAOoBZ2j82IbSJZWt9tAAAAABJRU5ErkJggg==
  mediatype: image/png
name: numaresources-operator
schema: olm.package
---
entries:
- name: numaresources-operator.v4.16.0
  skipRange: '>=4.15.0 <4.16.0'
- name: numaresources-operator.v4.16.1
  replaces: numaresources-operator.v4.16.0
  skipRange: '>=4.15.0 <4.16.1'
- name: numaresources-operator.v4.16.2
  replaces: numaresources-operator.v4.16.1
  skipRange: '>=4.15.0 <4.16.2'
- name: numaresources-operator.v4.16.3
  replaces: numaresources-operator.v4.16.2
  skipRange: '>=4.15.0 <4.16.3'
- name: numaresources-operator.v4.16.4
  replaces: numaresources-operator.v4.16.3
  skipRange: '>=4.15.0 <4.16.4'
- name: numaresources-operator.v4.16.5
  replaces: numaresources-operator.v4.16.4
  skipRange: '>=4.15.0 <4.16.5'
- name: numaresources-operator.v4.16.6
  replaces: numaresources-operator.v4.16.5
  skipRange: '>=4.15.0 <4.16.6'
name: "4.16"
package: numaresources-operator
schema: olm.channel
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:1317b5ca5cb3e5793ac5ff84ed896acd2c5c4ff6d34ee8dea930463255e2948d
name: numaresources-operator.v4.16.0
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.16.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:1317b5ca5cb3e5793ac5ff84ed896acd2c5c4ff6d34ee8dea930463255e2948d
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel9-operator@sha256:055ae2ed23442eb5acb85ca886890815ff41af7318e6f470b07090bc3e73e5a8
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:3a625f879f491a3bc45739a4d3270d2eb9b854ee5905595dedcb5f5028e4b6bc
name: numaresources-operator.v4.16.1
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.16.1
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:3a625f879f491a3bc45739a4d3270d2eb9b854ee5905595dedcb5f5028e4b6bc
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel9-operator@sha256:2262ea72ebccec50b6a7d3dd2be7e29c23e5dbe04a07259dc9cfa94dccc36126
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:89fbd7d9feb158efdfb950d713710654b7a38e5ed614135ce95a44543832ff86
name: numaresources-operator.v4.16.2
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.16.2
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJudW1hcmVzb3VyY2Vzb3BlcmF0b3JzLm5vZGV0b3BvbG9neS5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6Im5vZGV0b3BvbG9neS5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiTlVNQVJlc291cmNlc09wZXJhdG9yIiwibGlzdEtpbmQiOiJOVU1BUmVzb3VyY2VzT3BlcmF0b3JMaXN0IiwicGx1cmFsIjoibnVtYXJlc291cmNlc29wZXJhdG9ycyIsInNob3J0TmFtZXMiOlsibnVtYXJlc29wIl0sInNpbmd1bGFyIjoibnVtYXJlc291cmNlc29wZXJhdG9yIn0sInNjb3BlIjoiQ2x1c3RlciIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTlVNQVJlc291cmNlc09wZXJhdG9yIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBudW1hcmVzb3VyY2Vzb3BlcmF0b3JzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik5VTUFSZXNvdXJjZXNPcGVyYXRvclNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBOVU1BUmVzb3VyY2VzT3BlcmF0b3IiLCJwcm9wZXJ0aWVzIjp7ImltYWdlU3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIFJlc291cmNlIFRvcG9sb2d5IEV4cG9ydGVyIGltYWdlIFVSTCIsInR5cGUiOiJzdHJpbmcifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoiVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi5cbkRlZmF1bHRzIHRvIFwiTm9ybWFsXCIuIiwiZW51bSI6WyIiLCJOb3JtYWwiLCJEZWJ1ZyIsIlRyYWNlIiwiVHJhY2VBbGwiXSwidHlwZSI6InN0cmluZyJ9LCJub2RlR3JvdXBzIjp7ImRlc2NyaXB0aW9uIjoiR3JvdXAgb2YgTm9kZXMgdG8gZW5hYmxlIFJURSBvbiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTm9kZUdyb3VwIGRlZmluZXMgZ3JvdXAgb2Ygbm9kZXMgdGhhdCB3aWxsIHJ1biByZXNvdXJjZSB0b3BvbG9neSBleHBvcnRlciBkYWVtb24gc2V0XG5Zb3UgY2FuIGNob29zZSB0aGUgZ3JvdXAgb2Ygbm9kZSBieSBNYWNoaW5lQ29uZmlnUG9vbFNlbGVjdG9yIG9yIGJ5IE5vZGVTZWxlY3RvciIsInByb3BlcnRpZXMiOnsiY29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiQ29uZmlnIGRlZmluZXMgdGhlIFJURSBiZWhhdmlvciBmb3IgdGhpcyBOb2RlR3JvdXAiLCJwcm9wZXJ0aWVzIjp7ImluZm9SZWZyZXNoTW9kZSI6eyJkZXNjcmlwdGlvbiI6IkluZm9SZWZyZXNoTW9kZSBzZXRzIHRoZSBtZWNoYW5pc20gd2hpY2ggd2lsbCBiZSB1c2VkIHRvIHJlZnJlc2ggdGhlIHRvcG9sb2d5IGluZm8uIiwiZW51bSI6WyJQZXJpb2RpYyIsIkV2ZW50cyIsIlBlcmlvZGljQW5kRXZlbnRzIl0sInR5cGUiOiJzdHJpbmcifSwiaW5mb1JlZnJlc2hQYXVzZSI6eyJkZXNjcmlwdGlvbiI6IkluZm9SZWZyZXNoUGF1c2UgZGVmaW5lcyBpZiB1cGRhdGVzIHRvIE5SVHMgYXJlIHBhdXNlZCBmb3IgdGhlIG1hY2hpbmVzIGJlbG9uZ2luZyB0byB0aGlzIGdyb3VwIiwiZW51bSI6WyJEaXNhYmxlZCIsIkVuYWJsZWQiXSwidHlwZSI6InN0cmluZyJ9LCJpbmZvUmVmcmVzaFBlcmlvZCI6eyJkZXNjcmlwdGlvbiI6IkluZm9SZWZyZXNoUGVyaW9kIHNldHMgdGhlIHRvcG9sb2d5IGluZm8gcmVmcmVzaCBwZXJpb2QuIFVzZSBleHBsaWNpdCAwIHRvIGRpc2FibGUuIiwidHlwZSI6InN0cmluZyJ9LCJwb2RzRmluZ2VycHJpbnRpbmciOnsiZGVzY3JpcHRpb24iOiJQb2RzRmluZ2VycHJpbnRpbmcgZGVmaW5lcyBpZiBwb2QgZmluZ2VycHJpbnQgc2hvdWxkIGJlIHJlcG9ydGVkIGZvciB0aGUgbWFjaGluZXMgYmVsb25naW5nIHRvIHRoaXMgZ3JvdXAiLCJlbnVtIjpbIkRpc2FibGVkIiwiRW5hYmxlZCIsIkVuYWJsZWRFeGNsdXNpdmVSZXNvdXJjZXMiXSwidHlwZSI6InN0cmluZyJ9LCJ0b2xlcmF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlRvbGVyYXRpb25zIG92ZXJyaWRlcyB0b2xlcmF0aW9ucyB0byBiZSBzZXQgaW50byBSVEUgZGFlbW9uc2V0cyBmb3IgdGhpcyBOb2RlR3JvdXAuIElmIG5vdCBlbXB0eSwgdGhlIHRvbGVyYXRpb25zIHdpbGwgYmUgdGhlIG9uZSBzZXQgaGVyZS5cbkxlYXZlIGVtcHR5IHRvIG1ha2UgdGhlIHN5c3RlbSB1c2UgdGhlIGRlZmF1bHQgdG9sZXJhdGlvbnMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgcG9kIHRoaXMgVG9sZXJhdGlvbiBpcyBhdHRhY2hlZCB0byB0b2xlcmF0ZXMgYW55IHRhaW50IHRoYXQgbWF0Y2hlc1xudGhlIHRyaXBsZSBcdTAwM2NrZXksdmFsdWUsZWZmZWN0XHUwMDNlIHVzaW5nIHRoZSBtYXRjaGluZyBvcGVyYXRvciBcdTAwM2NvcGVyYXRvclx1MDAzZS4iLCJwcm9wZXJ0aWVzIjp7ImVmZmVjdCI6eyJkZXNjcmlwdGlvbiI6IkVmZmVjdCBpbmRpY2F0ZXMgdGhlIHRhaW50IGVmZmVjdCB0byBtYXRjaC4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGVmZmVjdHMuXG5XaGVuIHNwZWNpZmllZCwgYWxsb3dlZCB2YWx1ZXMgYXJlIE5vU2NoZWR1bGUsIFByZWZlck5vU2NoZWR1bGUgYW5kIE5vRXhlY3V0ZS4iLCJ0eXBlIjoic3RyaW5nIn0sImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSBpcyB0aGUgdGFpbnQga2V5IHRoYXQgdGhlIHRvbGVyYXRpb24gYXBwbGllcyB0by4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGtleXMuXG5JZiB0aGUga2V5IGlzIGVtcHR5LCBvcGVyYXRvciBtdXN0IGJlIEV4aXN0czsgdGhpcyBjb21iaW5hdGlvbiBtZWFucyB0byBtYXRjaCBhbGwgdmFsdWVzIGFuZCBhbGwga2V5cy4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiT3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byB0aGUgdmFsdWUuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEV4aXN0cyBhbmQgRXF1YWwuIERlZmF1bHRzIHRvIEVxdWFsLlxuRXhpc3RzIGlzIGVxdWl2YWxlbnQgdG8gd2lsZGNhcmQgZm9yIHZhbHVlLCBzbyB0aGF0IGEgcG9kIGNhblxudG9sZXJhdGUgYWxsIHRhaW50cyBvZiBhIHBhcnRpY3VsYXIgY2F0ZWdvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJ0b2xlcmF0aW9uU2Vjb25kcyI6eyJkZXNjcmlwdGlvbiI6IlRvbGVyYXRpb25TZWNvbmRzIHJlcHJlc2VudHMgdGhlIHBlcmlvZCBvZiB0aW1lIHRoZSB0b2xlcmF0aW9uICh3aGljaCBtdXN0IGJlXG5vZiBlZmZlY3QgTm9FeGVjdXRlLCBvdGhlcndpc2UgdGhpcyBmaWVsZCBpcyBpZ25vcmVkKSB0b2xlcmF0ZXMgdGhlIHRhaW50LiBCeSBkZWZhdWx0LFxuaXQgaXMgbm90IHNldCwgd2hpY2ggbWVhbnMgdG9sZXJhdGUgdGhlIHRhaW50IGZvcmV2ZXIgKGRvIG5vdCBldmljdCkuIFplcm8gYW5kXG5uZWdhdGl2ZSB2YWx1ZXMgd2lsbCBiZSB0cmVhdGVkIGFzIDAgKGV2aWN0IGltbWVkaWF0ZWx5KSBieSB0aGUgc3lzdGVtLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJWYWx1ZSBpcyB0aGUgdGFpbnQgdmFsdWUgdGhlIHRvbGVyYXRpb24gbWF0Y2hlcyB0by5cbklmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMsIHRoZSB2YWx1ZSBzaG91bGQgYmUgZW1wdHksIG90aGVyd2lzZSBqdXN0IGEgcmVndWxhciBzdHJpbmcuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwibWFjaGluZUNvbmZpZ1Bvb2xTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6Ik1hY2hpbmVDb25maWdQb29sU2VsZWN0b3IgZGVmaW5lcyBsYWJlbCBzZWxlY3RvciBmb3IgdGhlIG1hY2hpbmUgY29uZmlnIHBvb2wiLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwicG9kRXhjbHVkZXMiOnsiZGVzY3JpcHRpb24iOiJPcHRpb25hbCBOYW1lc3BhY2UvTmFtZSBnbG9iIHBhdHRlcm5zIG9mIHBvZCB0byBpZ25vcmUgYXQgbm9kZSBsZXZlbCIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlZE5hbWUgY29tcHJpc2VzIGEgcmVzb3VyY2UgbmFtZSwgd2l0aCBhIG1hbmRhdG9yeSBuYW1lc3BhY2UsXG5yZW5kZXJlZCBhcyBcIlx1MDAzY25hbWVzcGFjZVx1MDAzZS9cdTAwM2NuYW1lXHUwMDNlXCIuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6Ik5VTUFSZXNvdXJjZXNPcGVyYXRvclN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBOVU1BUmVzb3VyY2VzT3BlcmF0b3IiLCJwcm9wZXJ0aWVzIjp7ImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIHNob3cgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIE5VTUFSZXNvdXJjZXNPcGVyYXRvciBPcGVyYXRvciIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9uIGNvbnRhaW5zIGRldGFpbHMgZm9yIG9uZSBhc3BlY3Qgb2YgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhpcyBBUEkgUmVzb3VyY2UuXG4tLS1cblRoaXMgc3RydWN0IGlzIGludGVuZGVkIGZvciBkaXJlY3QgdXNlIGFzIGFuIGFycmF5IGF0IHRoZSBmaWVsZCBwYXRoIC5zdGF0dXMuY29uZGl0aW9ucy4gIEZvciBleGFtcGxlLFxuXG5cblx0dHlwZSBGb29TdGF0dXMgc3RydWN0e1xuXHQgICAgLy8gUmVwcmVzZW50cyB0aGUgb2JzZXJ2YXRpb25zIG9mIGEgZm9vJ3MgY3VycmVudCBzdGF0ZS5cblx0ICAgIC8vIEtub3duIC5zdGF0dXMuY29uZGl0aW9ucy50eXBlIGFyZTogXCJBdmFpbGFibGVcIiwgXCJQcm9ncmVzc2luZ1wiLCBhbmQgXCJEZWdyYWRlZFwiXG5cdCAgICAvLyArcGF0Y2hNZXJnZUtleT10eXBlXG5cdCAgICAvLyArcGF0Y2hTdHJhdGVneT1tZXJnZVxuXHQgICAgLy8gK2xpc3RUeXBlPW1hcFxuXHQgICAgLy8gK2xpc3RNYXBLZXk9dHlwZVxuXHQgICAgQ29uZGl0aW9ucyBbXW1ldGF2MS5Db25kaXRpb24gYGpzb246XCJjb25kaXRpb25zLG9taXRlbXB0eVwiIHBhdGNoU3RyYXRlZ3k6XCJtZXJnZVwiIHBhdGNoTWVyZ2VLZXk6XCJ0eXBlXCIgcHJvdG9idWY6XCJieXRlcywxLHJlcCxuYW1lPWNvbmRpdGlvbnNcImBcblxuXG5cdCAgICAvLyBvdGhlciBmaWVsZHNcblx0fSIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoibGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuXG5UaGlzIHNob3VsZCBiZSB3aGVuIHRoZSB1bmRlcmx5aW5nIGNvbmRpdGlvbiBjaGFuZ2VkLiAgSWYgdGhhdCBpcyBub3Qga25vd24sIHRoZW4gdXNpbmcgdGhlIHRpbWUgd2hlbiB0aGUgQVBJIGZpZWxkIGNoYW5nZWQgaXMgYWNjZXB0YWJsZS4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgdGhlIHRyYW5zaXRpb24uXG5UaGlzIG1heSBiZSBhbiBlbXB0eSBzdHJpbmcuIiwibWF4TGVuZ3RoIjozMjc2OCwidHlwZSI6InN0cmluZyJ9LCJvYnNlcnZlZEdlbmVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJvYnNlcnZlZEdlbmVyYXRpb24gcmVwcmVzZW50cyB0aGUgLm1ldGFkYXRhLmdlbmVyYXRpb24gdGhhdCB0aGUgY29uZGl0aW9uIHdhcyBzZXQgYmFzZWQgdXBvbi5cbkZvciBpbnN0YW5jZSwgaWYgLm1ldGFkYXRhLmdlbmVyYXRpb24gaXMgY3VycmVudGx5IDEyLCBidXQgdGhlIC5zdGF0dXMuY29uZGl0aW9uc1t4XS5vYnNlcnZlZEdlbmVyYXRpb24gaXMgOSwgdGhlIGNvbmRpdGlvbiBpcyBvdXQgb2YgZGF0ZVxud2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBpbnN0YW5jZS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBjb250YWlucyBhIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIGluZGljYXRpbmcgdGhlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi5cblByb2R1Y2VycyBvZiBzcGVjaWZpYyBjb25kaXRpb24gdHlwZXMgbWF5IGRlZmluZSBleHBlY3RlZCB2YWx1ZXMgYW5kIG1lYW5pbmdzIGZvciB0aGlzIGZpZWxkLFxuYW5kIHdoZXRoZXIgdGhlIHZhbHVlcyBhcmUgY29uc2lkZXJlZCBhIGd1YXJhbnRlZWQgQVBJLlxuVGhlIHZhbHVlIHNob3VsZCBiZSBhIENhbWVsQ2FzZSBzdHJpbmcuXG5UaGlzIGZpZWxkIG1heSBub3QgYmUgZW1wdHkuIiwibWF4TGVuZ3RoIjoxMDI0LCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW0EtWmEtel0oW0EtWmEtejAtOV8sOl0qW0EtWmEtejAtOV9dKT8kIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mIFRydWUsIEZhbHNlLCBVbmtub3duLiIsImVudW0iOlsiVHJ1ZSIsIkZhbHNlIiwiVW5rbm93biJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIG9mIGNvbmRpdGlvbiBpbiBDYW1lbENhc2Ugb3IgaW4gZm9vLmV4YW1wbGUuY29tL0NhbWVsQ2FzZS5cbi0tLVxuTWFueSAuY29uZGl0aW9uLnR5cGUgdmFsdWVzIGFyZSBjb25zaXN0ZW50IGFjcm9zcyByZXNvdXJjZXMgbGlrZSBBdmFpbGFibGUsIGJ1dCBiZWNhdXNlIGFyYml0cmFyeSBjb25kaXRpb25zIGNhbiBiZVxudXNlZnVsIChzZWUgLm5vZGUuc3RhdHVzLmNvbmRpdGlvbnMpLCB0aGUgYWJpbGl0eSB0byBkZWNvbmZsaWN0IGlzIGltcG9ydGFudC5cblRoZSByZWdleCBpdCBtYXRjaGVzIGlzIChkbnMxMTIzU3ViZG9tYWluRm10Lyk/KHF1YWxpZmllZE5hbWVGbXQpIiwibWF4TGVuZ3RoIjozMTYsInBhdHRlcm4iOiJeKFthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KFxcLlthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KSovKT8oKFtBLVphLXowLTldWy1BLVphLXowLTlfLl0qKT9bQS1aYS16MC05XSkkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwibWVzc2FnZSIsInJlYXNvbiIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZGFlbW9uc2V0cyI6eyJkZXNjcmlwdGlvbiI6IkRhZW1vblNldHMgb2YgdGhlIGNvbmZpZ3VyZWQgUlRFcywgb25lIHBlciBub2RlIGdyb3VwIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2VkTmFtZSBjb21wcmlzZXMgYSByZXNvdXJjZSBuYW1lLCB3aXRoIGEgbWFuZGF0b3J5IG5hbWVzcGFjZSxcbnJlbmRlcmVkIGFzIFwiXHUwMDNjbmFtZXNwYWNlXHUwMDNlL1x1MDAzY25hbWVcdTAwM2VcIi4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWFjaGluZWNvbmZpZ3Bvb2xzIjp7ImRlc2NyaXB0aW9uIjoiTWFjaGluZUNvbmZpZ1Bvb2xzIHJlc29sdmVkIGZyb20gY29uZmlndXJlZCBub2RlIGdyb3VwcyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTWFjaGluZUNvbmZpZ1Bvb2wgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgZWFjaCBNYWNoaW5lQ29uZmlnUG9vbCBzZWxlY3RlZCBieSBub2RlIGdyb3VwcyIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgcmVwcmVzZW50cyB0aGUgbGF0ZXN0IGF2YWlsYWJsZSBvYnNlcnZhdGlvbnMgb2YgTWFjaGluZUNvbmZpZ1Bvb2wgY3VycmVudCBzdGF0ZS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik1hY2hpbmVDb25maWdQb29sQ29uZGl0aW9uIGNvbnRhaW5zIGNvbmRpdGlvbiBpbmZvcm1hdGlvbiBmb3IgYW4gTWFjaGluZUNvbmZpZ1Bvb2wuIiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJsYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIHRpbWVzdGFtcCBjb3JyZXNwb25kaW5nIHRvIHRoZSBsYXN0IHN0YXR1c1xuY2hhbmdlIG9mIHRoaXMgY29uZGl0aW9uLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgZGVzY3JpcHRpb24gb2YgdGhlIGRldGFpbHMgb2YgdGhlIGxhc3RcbnRyYW5zaXRpb24sIGNvbXBsZW1lbnRpbmcgcmVhc29uLiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoicmVhc29uIGlzIGEgYnJpZWYgbWFjaGluZSByZWFkYWJsZSBleHBsYW5hdGlvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3RcbnRyYW5zaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mICgnVHJ1ZScsICdGYWxzZScsICdVbmtub3duJykuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBvZiB0aGUgY29uZGl0aW9uLCBjdXJyZW50bHkgKCdEb25lJywgJ1VwZGF0aW5nJywgJ0ZhaWxlZCcpLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsIm1lc3NhZ2UiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImNvbmZpZyI6eyJkZXNjcmlwdGlvbiI6Ik5vZGVHcm91cENvbmZpZyByZXByZXNlbnRzIHRoZSBsYXRlc3QgYXZhaWxhYmxlIGNvbmZpZ3VyYXRpb24gYXBwbGllZCB0byB0aGlzIE1hY2hpbmVDb25maWdQb29sIiwicHJvcGVydGllcyI6eyJpbmZvUmVmcmVzaE1vZGUiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaE1vZGUgc2V0cyB0aGUgbWVjaGFuaXNtIHdoaWNoIHdpbGwgYmUgdXNlZCB0byByZWZyZXNoIHRoZSB0b3BvbG9neSBpbmZvLiIsImVudW0iOlsiUGVyaW9kaWMiLCJFdmVudHMiLCJQZXJpb2RpY0FuZEV2ZW50cyJdLCJ0eXBlIjoic3RyaW5nIn0sImluZm9SZWZyZXNoUGF1c2UiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaFBhdXNlIGRlZmluZXMgaWYgdXBkYXRlcyB0byBOUlRzIGFyZSBwYXVzZWQgZm9yIHRoZSBtYWNoaW5lcyBiZWxvbmdpbmcgdG8gdGhpcyBncm91cCIsImVudW0iOlsiRGlzYWJsZWQiLCJFbmFibGVkIl0sInR5cGUiOiJzdHJpbmcifSwiaW5mb1JlZnJlc2hQZXJpb2QiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaFBlcmlvZCBzZXRzIHRoZSB0b3BvbG9neSBpbmZvIHJlZnJlc2ggcGVyaW9kLiBVc2UgZXhwbGljaXQgMCB0byBkaXNhYmxlLiIsInR5cGUiOiJzdHJpbmcifSwicG9kc0ZpbmdlcnByaW50aW5nIjp7ImRlc2NyaXB0aW9uIjoiUG9kc0ZpbmdlcnByaW50aW5nIGRlZmluZXMgaWYgcG9kIGZpbmdlcnByaW50IHNob3VsZCBiZSByZXBvcnRlZCBmb3IgdGhlIG1hY2hpbmVzIGJlbG9uZ2luZyB0byB0aGlzIGdyb3VwIiwiZW51bSI6WyJEaXNhYmxlZCIsIkVuYWJsZWQiLCJFbmFibGVkRXhjbHVzaXZlUmVzb3VyY2VzIl0sInR5cGUiOiJzdHJpbmcifSwidG9sZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJUb2xlcmF0aW9ucyBvdmVycmlkZXMgdG9sZXJhdGlvbnMgdG8gYmUgc2V0IGludG8gUlRFIGRhZW1vbnNldHMgZm9yIHRoaXMgTm9kZUdyb3VwLiBJZiBub3QgZW1wdHksIHRoZSB0b2xlcmF0aW9ucyB3aWxsIGJlIHRoZSBvbmUgc2V0IGhlcmUuXG5MZWF2ZSBlbXB0eSB0byBtYWtlIHRoZSBzeXN0ZW0gdXNlIHRoZSBkZWZhdWx0IHRvbGVyYXRpb25zLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHBvZCB0aGlzIFRvbGVyYXRpb24gaXMgYXR0YWNoZWQgdG8gdG9sZXJhdGVzIGFueSB0YWludCB0aGF0IG1hdGNoZXNcbnRoZSB0cmlwbGUgXHUwMDNja2V5LHZhbHVlLGVmZmVjdFx1MDAzZSB1c2luZyB0aGUgbWF0Y2hpbmcgb3BlcmF0b3IgXHUwMDNjb3BlcmF0b3JcdTAwM2UuIiwicHJvcGVydGllcyI6eyJlZmZlY3QiOnsiZGVzY3JpcHRpb24iOiJFZmZlY3QgaW5kaWNhdGVzIHRoZSB0YWludCBlZmZlY3QgdG8gbWF0Y2guIEVtcHR5IG1lYW5zIG1hdGNoIGFsbCB0YWludCBlZmZlY3RzLlxuV2hlbiBzcGVjaWZpZWQsIGFsbG93ZWQgdmFsdWVzIGFyZSBOb1NjaGVkdWxlLCBQcmVmZXJOb1NjaGVkdWxlIGFuZCBOb0V4ZWN1dGUuIiwidHlwZSI6InN0cmluZyJ9LCJrZXkiOnsiZGVzY3JpcHRpb24iOiJLZXkgaXMgdGhlIHRhaW50IGtleSB0aGF0IHRoZSB0b2xlcmF0aW9uIGFwcGxpZXMgdG8uIEVtcHR5IG1lYW5zIG1hdGNoIGFsbCB0YWludCBrZXlzLlxuSWYgdGhlIGtleSBpcyBlbXB0eSwgb3BlcmF0b3IgbXVzdCBiZSBFeGlzdHM7IHRoaXMgY29tYmluYXRpb24gbWVhbnMgdG8gbWF0Y2ggYWxsIHZhbHVlcyBhbmQgYWxsIGtleXMuIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Ik9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gdGhlIHZhbHVlLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBFeGlzdHMgYW5kIEVxdWFsLiBEZWZhdWx0cyB0byBFcXVhbC5cbkV4aXN0cyBpcyBlcXVpdmFsZW50IHRvIHdpbGRjYXJkIGZvciB2YWx1ZSwgc28gdGhhdCBhIHBvZCBjYW5cbnRvbGVyYXRlIGFsbCB0YWludHMgb2YgYSBwYXJ0aWN1bGFyIGNhdGVnb3J5LiIsInR5cGUiOiJzdHJpbmcifSwidG9sZXJhdGlvblNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJUb2xlcmF0aW9uU2Vjb25kcyByZXByZXNlbnRzIHRoZSBwZXJpb2Qgb2YgdGltZSB0aGUgdG9sZXJhdGlvbiAod2hpY2ggbXVzdCBiZVxub2YgZWZmZWN0IE5vRXhlY3V0ZSwgb3RoZXJ3aXNlIHRoaXMgZmllbGQgaXMgaWdub3JlZCkgdG9sZXJhdGVzIHRoZSB0YWludC4gQnkgZGVmYXVsdCxcbml0IGlzIG5vdCBzZXQsIHdoaWNoIG1lYW5zIHRvbGVyYXRlIHRoZSB0YWludCBmb3JldmVyIChkbyBub3QgZXZpY3QpLiBaZXJvIGFuZFxubmVnYXRpdmUgdmFsdWVzIHdpbGwgYmUgdHJlYXRlZCBhcyAwIChldmljdCBpbW1lZGlhdGVseSkgYnkgdGhlIHN5c3RlbS4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiVmFsdWUgaXMgdGhlIHRhaW50IHZhbHVlIHRoZSB0b2xlcmF0aW9uIG1hdGNoZXMgdG8uXG5JZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzLCB0aGUgdmFsdWUgc2hvdWxkIGJlIGVtcHR5LCBvdGhlcndpc2UganVzdCBhIHJlZ3VsYXIgc3RyaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIHRoZSBuYW1lIG9mIHRoZSBtYWNoaW5lIGNvbmZpZyBwb29sIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZWxhdGVkT2JqZWN0cyI6eyJkZXNjcmlwdGlvbiI6IlJlbGF0ZWRPYmplY3RzIGxpc3Qgb2Ygb2JqZWN0cyBvZiBpbnRlcmVzdCBmb3IgdGhpcyBvcGVyYXRvciIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiT2JqZWN0UmVmZXJlbmNlIGNvbnRhaW5zIGVub3VnaCBpbmZvcm1hdGlvbiB0byBsZXQgeW91IGluc3BlY3Qgb3IgbW9kaWZ5IHRoZSByZWZlcnJlZCBvYmplY3QuIiwicHJvcGVydGllcyI6eyJncm91cCI6eyJkZXNjcmlwdGlvbiI6Imdyb3VwIG9mIHRoZSByZWZlcmVudC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJuYW1lIG9mIHRoZSByZWZlcmVudC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZSBvZiB0aGUgcmVmZXJlbnQuIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6InJlc291cmNlIG9mIHRoZSByZWZlcmVudC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJncm91cCIsIm5hbWUiLCJyZXNvdXJjZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19LHsibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6Ik5VTUFSZXNvdXJjZXNPcGVyYXRvciBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbnVtYXJlc291cmNlc29wZXJhdG9ycyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJOVU1BUmVzb3VyY2VzT3BlcmF0b3JTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTlVNQVJlc291cmNlc09wZXJhdG9yIiwicHJvcGVydGllcyI6eyJpbWFnZVNwZWMiOnsiZGVzY3JpcHRpb24iOiJPcHRpb25hbCBSZXNvdXJjZSBUb3BvbG9neSBFeHBvcnRlciBpbWFnZSBVUkwiLCJ0eXBlIjoic3RyaW5nIn0sImxvZ0xldmVsIjp7ImRlZmF1bHQiOiJOb3JtYWwiLCJkZXNjcmlwdGlvbiI6IlZhbGlkIHZhbHVlcyBhcmU6IFwiTm9ybWFsXCIsIFwiRGVidWdcIiwgXCJUcmFjZVwiLCBcIlRyYWNlQWxsXCIuXG5EZWZhdWx0cyB0byBcIk5vcm1hbFwiLiIsImVudW0iOlsiIiwiTm9ybWFsIiwiRGVidWciLCJUcmFjZSIsIlRyYWNlQWxsIl0sInR5cGUiOiJzdHJpbmcifSwibm9kZUdyb3VwcyI6eyJkZXNjcmlwdGlvbiI6Ikdyb3VwIG9mIE5vZGVzIHRvIGVuYWJsZSBSVEUgb24iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik5vZGVHcm91cCBkZWZpbmVzIGdyb3VwIG9mIG5vZGVzIHRoYXQgd2lsbCBydW4gcmVzb3VyY2UgdG9wb2xvZ3kgZXhwb3J0ZXIgZGFlbW9uIHNldFxuWW91IGNhbiBjaG9vc2UgdGhlIGdyb3VwIG9mIG5vZGUgYnkgTWFjaGluZUNvbmZpZ1Bvb2xTZWxlY3RvciBvciBieSBOb2RlU2VsZWN0b3IiLCJwcm9wZXJ0aWVzIjp7ImNvbmZpZyI6eyJkZXNjcmlwdGlvbiI6IkNvbmZpZyBkZWZpbmVzIHRoZSBSVEUgYmVoYXZpb3IgZm9yIHRoaXMgTm9kZUdyb3VwIiwicHJvcGVydGllcyI6eyJpbmZvUmVmcmVzaE1vZGUiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaE1vZGUgc2V0cyB0aGUgbWVjaGFuaXNtIHdoaWNoIHdpbGwgYmUgdXNlZCB0byByZWZyZXNoIHRoZSB0b3BvbG9neSBpbmZvLiIsImVudW0iOlsiUGVyaW9kaWMiLCJFdmVudHMiLCJQZXJpb2RpY0FuZEV2ZW50cyJdLCJ0eXBlIjoic3RyaW5nIn0sImluZm9SZWZyZXNoUGVyaW9kIjp7ImRlc2NyaXB0aW9uIjoiSW5mb1JlZnJlc2hQZXJpb2Qgc2V0cyB0aGUgdG9wb2xvZ3kgaW5mbyByZWZyZXNoIHBlcmlvZC4gVXNlIGV4cGxpY2l0IDAgdG8gZGlzYWJsZS4iLCJ0eXBlIjoic3RyaW5nIn0sInBvZHNGaW5nZXJwcmludGluZyI6eyJkZXNjcmlwdGlvbiI6IlBvZHNGaW5nZXJwcmludGluZyBkZWZpbmVzIGlmIHBvZCBmaW5nZXJwcmludCBzaG91bGQgYmUgcmVwb3J0ZWQgZm9yIHRoZSBtYWNoaW5lcyBiZWxvbmdpbmcgdG8gdGhpcyBncm91cCIsImVudW0iOlsiRW5hYmxlZCIsIkRpc2FibGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiZGlzYWJsZVBvZHNGaW5nZXJwcmludGluZyI6eyJkZXNjcmlwdGlvbiI6IkRpc2FibGVQb2RzRmluZ2VycHJpbnRpbmcgZGVmaW5lcyBpZiBwb2QgZmluZ2VycHJpbnQgc2hvdWxkIGJlIG9taXR0ZWQgZm9yIHRoZSBtYWNoaW5lcyBiZWxvbmdpbmcgdG8gdGhpcyBncm91cCAoREVQUkVDQVRFRDogdXNlIENvbmZpZyBpbnN0ZWFkKSIsInR5cGUiOiJib29sZWFuIn0sIm1hY2hpbmVDb25maWdQb29sU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJNYWNoaW5lQ29uZmlnUG9vbFNlbGVjdG9yIGRlZmluZXMgbGFiZWwgc2VsZWN0b3IgZm9yIHRoZSBtYWNoaW5lIGNvbmZpZyBwb29sIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInBvZEV4Y2x1ZGVzIjp7ImRlc2NyaXB0aW9uIjoiT3B0aW9uYWwgTmFtZXNwYWNlL05hbWUgZ2xvYiBwYXR0ZXJucyBvZiBwb2QgdG8gaWdub3JlIGF0IG5vZGUgbGV2ZWwiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZWROYW1lIGNvbXByaXNlcyBhIHJlc291cmNlIG5hbWUsIHdpdGggYSBtYW5kYXRvcnkgbmFtZXNwYWNlLFxucmVuZGVyZWQgYXMgXCJcdTAwM2NuYW1lc3BhY2VcdTAwM2UvXHUwMDNjbmFtZVx1MDAzZVwiLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJOVU1BUmVzb3VyY2VzT3BlcmF0b3JTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTlVNQVJlc291cmNlc09wZXJhdG9yIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyBzaG93IHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBOVU1BUmVzb3VyY2VzT3BlcmF0b3IgT3BlcmF0b3IiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbiBjb250YWlucyBkZXRhaWxzIGZvciBvbmUgYXNwZWN0IG9mIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoaXMgQVBJIFJlc291cmNlLlxuLS0tXG5UaGlzIHN0cnVjdCBpcyBpbnRlbmRlZCBmb3IgZGlyZWN0IHVzZSBhcyBhbiBhcnJheSBhdCB0aGUgZmllbGQgcGF0aCAuc3RhdHVzLmNvbmRpdGlvbnMuICBGb3IgZXhhbXBsZSxcblxuXG5cdHR5cGUgRm9vU3RhdHVzIHN0cnVjdHtcblx0ICAgIC8vIFJlcHJlc2VudHMgdGhlIG9ic2VydmF0aW9ucyBvZiBhIGZvbydzIGN1cnJlbnQgc3RhdGUuXG5cdCAgICAvLyBLbm93biAuc3RhdHVzLmNvbmRpdGlvbnMudHlwZSBhcmU6IFwiQXZhaWxhYmxlXCIsIFwiUHJvZ3Jlc3NpbmdcIiwgYW5kIFwiRGVncmFkZWRcIlxuXHQgICAgLy8gK3BhdGNoTWVyZ2VLZXk9dHlwZVxuXHQgICAgLy8gK3BhdGNoU3RyYXRlZ3k9bWVyZ2Vcblx0ICAgIC8vICtsaXN0VHlwZT1tYXBcblx0ICAgIC8vICtsaXN0TWFwS2V5PXR5cGVcblx0ICAgIENvbmRpdGlvbnMgW11tZXRhdjEuQ29uZGl0aW9uIGBqc29uOlwiY29uZGl0aW9ucyxvbWl0ZW1wdHlcIiBwYXRjaFN0cmF0ZWd5OlwibWVyZ2VcIiBwYXRjaE1lcmdlS2V5OlwidHlwZVwiIHByb3RvYnVmOlwiYnl0ZXMsMSxyZXAsbmFtZT1jb25kaXRpb25zXCJgXG5cblxuXHQgICAgLy8gb3RoZXIgZmllbGRzXG5cdH0iLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Imxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgbGFzdCB0aW1lIHRoZSBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLlxuVGhpcyBzaG91bGQgYmUgd2hlbiB0aGUgdW5kZXJseWluZyBjb25kaXRpb24gY2hhbmdlZC4gIElmIHRoYXQgaXMgbm90IGtub3duLCB0aGVuIHVzaW5nIHRoZSB0aW1lIHdoZW4gdGhlIEFQSSBmaWVsZCBjaGFuZ2VkIGlzIGFjY2VwdGFibGUuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoibWVzc2FnZSBpcyBhIGh1bWFuIHJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IHRoZSB0cmFuc2l0aW9uLlxuVGhpcyBtYXkgYmUgYW4gZW1wdHkgc3RyaW5nLiIsIm1heExlbmd0aCI6MzI3NjgsInR5cGUiOiJzdHJpbmcifSwib2JzZXJ2ZWRHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRHZW5lcmF0aW9uIHJlcHJlc2VudHMgdGhlIC5tZXRhZGF0YS5nZW5lcmF0aW9uIHRoYXQgdGhlIGNvbmRpdGlvbiB3YXMgc2V0IGJhc2VkIHVwb24uXG5Gb3IgaW5zdGFuY2UsIGlmIC5tZXRhZGF0YS5nZW5lcmF0aW9uIGlzIGN1cnJlbnRseSAxMiwgYnV0IHRoZSAuc3RhdHVzLmNvbmRpdGlvbnNbeF0ub2JzZXJ2ZWRHZW5lcmF0aW9uIGlzIDksIHRoZSBjb25kaXRpb24gaXMgb3V0IG9mIGRhdGVcbndpdGggcmVzcGVjdCB0byB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgaW5zdGFuY2UuIiwiZm9ybWF0IjoiaW50NjQiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJyZWFzb24gY29udGFpbnMgYSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBpbmRpY2F0aW5nIHRoZSByZWFzb24gZm9yIHRoZSBjb25kaXRpb24ncyBsYXN0IHRyYW5zaXRpb24uXG5Qcm9kdWNlcnMgb2Ygc3BlY2lmaWMgY29uZGl0aW9uIHR5cGVzIG1heSBkZWZpbmUgZXhwZWN0ZWQgdmFsdWVzIGFuZCBtZWFuaW5ncyBmb3IgdGhpcyBmaWVsZCxcbmFuZCB3aGV0aGVyIHRoZSB2YWx1ZXMgYXJlIGNvbnNpZGVyZWQgYSBndWFyYW50ZWVkIEFQSS5cblRoZSB2YWx1ZSBzaG91bGQgYmUgYSBDYW1lbENhc2Ugc3RyaW5nLlxuVGhpcyBmaWVsZCBtYXkgbm90IGJlIGVtcHR5LiIsIm1heExlbmd0aCI6MTAyNCwibWluTGVuZ3RoIjoxLCJwYXR0ZXJuIjoiXltBLVphLXpdKFtBLVphLXowLTlfLDpdKltBLVphLXowLTlfXSk/JCIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoic3RhdHVzIG9mIHRoZSBjb25kaXRpb24sIG9uZSBvZiBUcnVlLCBGYWxzZSwgVW5rbm93bi4iLCJlbnVtIjpbIlRydWUiLCJGYWxzZSIsIlVua25vd24iXSwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBvZiBjb25kaXRpb24gaW4gQ2FtZWxDYXNlIG9yIGluIGZvby5leGFtcGxlLmNvbS9DYW1lbENhc2UuXG4tLS1cbk1hbnkgLmNvbmRpdGlvbi50eXBlIHZhbHVlcyBhcmUgY29uc2lzdGVudCBhY3Jvc3MgcmVzb3VyY2VzIGxpa2UgQXZhaWxhYmxlLCBidXQgYmVjYXVzZSBhcmJpdHJhcnkgY29uZGl0aW9ucyBjYW4gYmVcbnVzZWZ1bCAoc2VlIC5ub2RlLnN0YXR1cy5jb25kaXRpb25zKSwgdGhlIGFiaWxpdHkgdG8gZGVjb25mbGljdCBpcyBpbXBvcnRhbnQuXG5UaGUgcmVnZXggaXQgbWF0Y2hlcyBpcyAoZG5zMTEyM1N1YmRvbWFpbkZtdC8pPyhxdWFsaWZpZWROYW1lRm10KSIsIm1heExlbmd0aCI6MzE2LCJwYXR0ZXJuIjoiXihbYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPyhcXC5bYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPykqLyk/KChbQS1aYS16MC05XVstQS1aYS16MC05Xy5dKik/W0EtWmEtejAtOV0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsIm1lc3NhZ2UiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImRhZW1vbnNldHMiOnsiZGVzY3JpcHRpb24iOiJEYWVtb25TZXRzIG9mIHRoZSBjb25maWd1cmVkIFJURXMsIG9uZSBwZXIgbm9kZSBncm91cCIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlZE5hbWUgY29tcHJpc2VzIGEgcmVzb3VyY2UgbmFtZSwgd2l0aCBhIG1hbmRhdG9yeSBuYW1lc3BhY2UsXG5yZW5kZXJlZCBhcyBcIlx1MDAzY25hbWVzcGFjZVx1MDAzZS9cdTAwM2NuYW1lXHUwMDNlXCIuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hY2hpbmVjb25maWdwb29scyI6eyJkZXNjcmlwdGlvbiI6Ik1hY2hpbmVDb25maWdQb29scyByZXNvbHZlZCBmcm9tIGNvbmZpZ3VyZWQgbm9kZSBncm91cHMiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik1hY2hpbmVDb25maWdQb29sIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIGVhY2ggTWFjaGluZUNvbmZpZ1Bvb2wgc2VsZWN0ZWQgYnkgbm9kZSBncm91cHMiLCJwcm9wZXJ0aWVzIjp7ImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIHJlcHJlc2VudHMgdGhlIGxhdGVzdCBhdmFpbGFibGUgb2JzZXJ2YXRpb25zIG9mIE1hY2hpbmVDb25maWdQb29sIGN1cnJlbnQgc3RhdGUuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJNYWNoaW5lQ29uZmlnUG9vbENvbmRpdGlvbiBjb250YWlucyBjb25kaXRpb24gaW5mb3JtYXRpb24gZm9yIGFuIE1hY2hpbmVDb25maWdQb29sLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoibGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSB0aW1lc3RhbXAgY29ycmVzcG9uZGluZyB0byB0aGUgbGFzdCBzdGF0dXNcbmNoYW5nZSBvZiB0aGlzIGNvbmRpdGlvbi4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6InN0cmluZyJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoibWVzc2FnZSBpcyBhIGh1bWFuIHJlYWRhYmxlIGRlc2NyaXB0aW9uIG9mIHRoZSBkZXRhaWxzIG9mIHRoZSBsYXN0XG50cmFuc2l0aW9uLCBjb21wbGVtZW50aW5nIHJlYXNvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBpcyBhIGJyaWVmIG1hY2hpbmUgcmVhZGFibGUgZXhwbGFuYXRpb24gZm9yIHRoZSBjb25kaXRpb24ncyBsYXN0XG50cmFuc2l0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoic3RhdHVzIG9mIHRoZSBjb25kaXRpb24sIG9uZSBvZiAoJ1RydWUnLCAnRmFsc2UnLCAnVW5rbm93bicpLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgb2YgdGhlIGNvbmRpdGlvbiwgY3VycmVudGx5ICgnRG9uZScsICdVcGRhdGluZycsICdGYWlsZWQnKS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJtZXNzYWdlIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJjb25maWciOnsiZGVzY3JpcHRpb24iOiJOb2RlR3JvdXBDb25maWcgcmVwcmVzZW50cyB0aGUgbGF0ZXN0IGF2YWlsYWJsZSBjb25maWd1cmF0aW9uIGFwcGxpZWQgdG8gdGhpcyBNYWNoaW5lQ29uZmlnUG9vbCIsInByb3BlcnRpZXMiOnsiaW5mb1JlZnJlc2hNb2RlIjp7ImRlc2NyaXB0aW9uIjoiSW5mb1JlZnJlc2hNb2RlIHNldHMgdGhlIG1lY2hhbmlzbSB3aGljaCB3aWxsIGJlIHVzZWQgdG8gcmVmcmVzaCB0aGUgdG9wb2xvZ3kgaW5mby4iLCJlbnVtIjpbIlBlcmlvZGljIiwiRXZlbnRzIiwiUGVyaW9kaWNBbmRFdmVudHMiXSwidHlwZSI6InN0cmluZyJ9LCJpbmZvUmVmcmVzaFBlcmlvZCI6eyJkZXNjcmlwdGlvbiI6IkluZm9SZWZyZXNoUGVyaW9kIHNldHMgdGhlIHRvcG9sb2d5IGluZm8gcmVmcmVzaCBwZXJpb2QuIFVzZSBleHBsaWNpdCAwIHRvIGRpc2FibGUuIiwidHlwZSI6InN0cmluZyJ9LCJwb2RzRmluZ2VycHJpbnRpbmciOnsiZGVzY3JpcHRpb24iOiJQb2RzRmluZ2VycHJpbnRpbmcgZGVmaW5lcyBpZiBwb2QgZmluZ2VycHJpbnQgc2hvdWxkIGJlIHJlcG9ydGVkIGZvciB0aGUgbWFjaGluZXMgYmVsb25naW5nIHRvIHRoaXMgZ3JvdXAiLCJlbnVtIjpbIkVuYWJsZWQiLCJEaXNhYmxlZCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIHRoZSBuYW1lIG9mIHRoZSBtYWNoaW5lIGNvbmZpZyBwb29sIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:89fbd7d9feb158efdfb950d713710654b7a38e5ed614135ce95a44543832ff86
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel9-operator@sha256:1886ba2cb604b10facfa4776edfd237c380b3f3d4ca382c0b35f7de602497e7b
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:19e83a2d54e4f1ee20f28aa1ca1c8d73b69fffbbcc8127f3591eb4592a9cde2d
name: numaresources-operator.v4.16.3
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.16.3
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:19e83a2d54e4f1ee20f28aa1ca1c8d73b69fffbbcc8127f3591eb4592a9cde2d
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel9-operator@sha256:8f01bbff2cb042390f59d76d9ffae8049c40e62c5fe1609ddbd715cdc8d61538
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:0f3627ca652f1a48be71d60c75cf80e4a7430d2d95b425a8b229f8275ed067ad
name: numaresources-operator.v4.16.4
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.16.4
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJudW1hcmVzb3VyY2Vzb3BlcmF0b3JzLm5vZGV0b3BvbG9neS5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6Im5vZGV0b3BvbG9neS5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiTlVNQVJlc291cmNlc09wZXJhdG9yIiwibGlzdEtpbmQiOiJOVU1BUmVzb3VyY2VzT3BlcmF0b3JMaXN0IiwicGx1cmFsIjoibnVtYXJlc291cmNlc29wZXJhdG9ycyIsInNob3J0TmFtZXMiOlsibnVtYXJlc29wIl0sInNpbmd1bGFyIjoibnVtYXJlc291cmNlc29wZXJhdG9yIn0sInNjb3BlIjoiQ2x1c3RlciIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTlVNQVJlc291cmNlc09wZXJhdG9yIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBudW1hcmVzb3VyY2Vzb3BlcmF0b3JzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik5VTUFSZXNvdXJjZXNPcGVyYXRvclNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBOVU1BUmVzb3VyY2VzT3BlcmF0b3IiLCJwcm9wZXJ0aWVzIjp7ImltYWdlU3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIFJlc291cmNlIFRvcG9sb2d5IEV4cG9ydGVyIGltYWdlIFVSTCIsInR5cGUiOiJzdHJpbmcifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoiVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi5cbkRlZmF1bHRzIHRvIFwiTm9ybWFsXCIuIiwiZW51bSI6WyIiLCJOb3JtYWwiLCJEZWJ1ZyIsIlRyYWNlIiwiVHJhY2VBbGwiXSwidHlwZSI6InN0cmluZyJ9LCJub2RlR3JvdXBzIjp7ImRlc2NyaXB0aW9uIjoiR3JvdXAgb2YgTm9kZXMgdG8gZW5hYmxlIFJURSBvbiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTm9kZUdyb3VwIGRlZmluZXMgZ3JvdXAgb2Ygbm9kZXMgdGhhdCB3aWxsIHJ1biByZXNvdXJjZSB0b3BvbG9neSBleHBvcnRlciBkYWVtb24gc2V0XG5Zb3UgY2FuIGNob29zZSB0aGUgZ3JvdXAgb2Ygbm9kZSBieSBNYWNoaW5lQ29uZmlnUG9vbFNlbGVjdG9yIG9yIGJ5IE5vZGVTZWxlY3RvciIsInByb3BlcnRpZXMiOnsiY29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiQ29uZmlnIGRlZmluZXMgdGhlIFJURSBiZWhhdmlvciBmb3IgdGhpcyBOb2RlR3JvdXAiLCJwcm9wZXJ0aWVzIjp7ImluZm9SZWZyZXNoTW9kZSI6eyJkZXNjcmlwdGlvbiI6IkluZm9SZWZyZXNoTW9kZSBzZXRzIHRoZSBtZWNoYW5pc20gd2hpY2ggd2lsbCBiZSB1c2VkIHRvIHJlZnJlc2ggdGhlIHRvcG9sb2d5IGluZm8uIiwiZW51bSI6WyJQZXJpb2RpYyIsIkV2ZW50cyIsIlBlcmlvZGljQW5kRXZlbnRzIl0sInR5cGUiOiJzdHJpbmcifSwiaW5mb1JlZnJlc2hQYXVzZSI6eyJkZXNjcmlwdGlvbiI6IkluZm9SZWZyZXNoUGF1c2UgZGVmaW5lcyBpZiB1cGRhdGVzIHRvIE5SVHMgYXJlIHBhdXNlZCBmb3IgdGhlIG1hY2hpbmVzIGJlbG9uZ2luZyB0byB0aGlzIGdyb3VwIiwiZW51bSI6WyJEaXNhYmxlZCIsIkVuYWJsZWQiXSwidHlwZSI6InN0cmluZyJ9LCJpbmZvUmVmcmVzaFBlcmlvZCI6eyJkZXNjcmlwdGlvbiI6IkluZm9SZWZyZXNoUGVyaW9kIHNldHMgdGhlIHRvcG9sb2d5IGluZm8gcmVmcmVzaCBwZXJpb2QuIFVzZSBleHBsaWNpdCAwIHRvIGRpc2FibGUuIiwidHlwZSI6InN0cmluZyJ9LCJwb2RzRmluZ2VycHJpbnRpbmciOnsiZGVzY3JpcHRpb24iOiJQb2RzRmluZ2VycHJpbnRpbmcgZGVmaW5lcyBpZiBwb2QgZmluZ2VycHJpbnQgc2hvdWxkIGJlIHJlcG9ydGVkIGZvciB0aGUgbWFjaGluZXMgYmVsb25naW5nIHRvIHRoaXMgZ3JvdXAiLCJlbnVtIjpbIkRpc2FibGVkIiwiRW5hYmxlZCIsIkVuYWJsZWRFeGNsdXNpdmVSZXNvdXJjZXMiXSwidHlwZSI6InN0cmluZyJ9LCJ0b2xlcmF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlRvbGVyYXRpb25zIG92ZXJyaWRlcyB0b2xlcmF0aW9ucyB0byBiZSBzZXQgaW50byBSVEUgZGFlbW9uc2V0cyBmb3IgdGhpcyBOb2RlR3JvdXAuIElmIG5vdCBlbXB0eSwgdGhlIHRvbGVyYXRpb25zIHdpbGwgYmUgdGhlIG9uZSBzZXQgaGVyZS5cbkxlYXZlIGVtcHR5IHRvIG1ha2UgdGhlIHN5c3RlbSB1c2UgdGhlIGRlZmF1bHQgdG9sZXJhdGlvbnMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgcG9kIHRoaXMgVG9sZXJhdGlvbiBpcyBhdHRhY2hlZCB0byB0b2xlcmF0ZXMgYW55IHRhaW50IHRoYXQgbWF0Y2hlc1xudGhlIHRyaXBsZSBcdTAwM2NrZXksdmFsdWUsZWZmZWN0XHUwMDNlIHVzaW5nIHRoZSBtYXRjaGluZyBvcGVyYXRvciBcdTAwM2NvcGVyYXRvclx1MDAzZS4iLCJwcm9wZXJ0aWVzIjp7ImVmZmVjdCI6eyJkZXNjcmlwdGlvbiI6IkVmZmVjdCBpbmRpY2F0ZXMgdGhlIHRhaW50IGVmZmVjdCB0byBtYXRjaC4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGVmZmVjdHMuXG5XaGVuIHNwZWNpZmllZCwgYWxsb3dlZCB2YWx1ZXMgYXJlIE5vU2NoZWR1bGUsIFByZWZlck5vU2NoZWR1bGUgYW5kIE5vRXhlY3V0ZS4iLCJ0eXBlIjoic3RyaW5nIn0sImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSBpcyB0aGUgdGFpbnQga2V5IHRoYXQgdGhlIHRvbGVyYXRpb24gYXBwbGllcyB0by4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGtleXMuXG5JZiB0aGUga2V5IGlzIGVtcHR5LCBvcGVyYXRvciBtdXN0IGJlIEV4aXN0czsgdGhpcyBjb21iaW5hdGlvbiBtZWFucyB0byBtYXRjaCBhbGwgdmFsdWVzIGFuZCBhbGwga2V5cy4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiT3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byB0aGUgdmFsdWUuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEV4aXN0cyBhbmQgRXF1YWwuIERlZmF1bHRzIHRvIEVxdWFsLlxuRXhpc3RzIGlzIGVxdWl2YWxlbnQgdG8gd2lsZGNhcmQgZm9yIHZhbHVlLCBzbyB0aGF0IGEgcG9kIGNhblxudG9sZXJhdGUgYWxsIHRhaW50cyBvZiBhIHBhcnRpY3VsYXIgY2F0ZWdvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJ0b2xlcmF0aW9uU2Vjb25kcyI6eyJkZXNjcmlwdGlvbiI6IlRvbGVyYXRpb25TZWNvbmRzIHJlcHJlc2VudHMgdGhlIHBlcmlvZCBvZiB0aW1lIHRoZSB0b2xlcmF0aW9uICh3aGljaCBtdXN0IGJlXG5vZiBlZmZlY3QgTm9FeGVjdXRlLCBvdGhlcndpc2UgdGhpcyBmaWVsZCBpcyBpZ25vcmVkKSB0b2xlcmF0ZXMgdGhlIHRhaW50LiBCeSBkZWZhdWx0LFxuaXQgaXMgbm90IHNldCwgd2hpY2ggbWVhbnMgdG9sZXJhdGUgdGhlIHRhaW50IGZvcmV2ZXIgKGRvIG5vdCBldmljdCkuIFplcm8gYW5kXG5uZWdhdGl2ZSB2YWx1ZXMgd2lsbCBiZSB0cmVhdGVkIGFzIDAgKGV2aWN0IGltbWVkaWF0ZWx5KSBieSB0aGUgc3lzdGVtLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJWYWx1ZSBpcyB0aGUgdGFpbnQgdmFsdWUgdGhlIHRvbGVyYXRpb24gbWF0Y2hlcyB0by5cbklmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMsIHRoZSB2YWx1ZSBzaG91bGQgYmUgZW1wdHksIG90aGVyd2lzZSBqdXN0IGEgcmVndWxhciBzdHJpbmcuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwibWFjaGluZUNvbmZpZ1Bvb2xTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6Ik1hY2hpbmVDb25maWdQb29sU2VsZWN0b3IgZGVmaW5lcyBsYWJlbCBzZWxlY3RvciBmb3IgdGhlIG1hY2hpbmUgY29uZmlnIHBvb2wiLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwicG9kRXhjbHVkZXMiOnsiZGVzY3JpcHRpb24iOiJPcHRpb25hbCBOYW1lc3BhY2UvTmFtZSBnbG9iIHBhdHRlcm5zIG9mIHBvZCB0byBpZ25vcmUgYXQgbm9kZSBsZXZlbCIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlZE5hbWUgY29tcHJpc2VzIGEgcmVzb3VyY2UgbmFtZSwgd2l0aCBhIG1hbmRhdG9yeSBuYW1lc3BhY2UsXG5yZW5kZXJlZCBhcyBcIlx1MDAzY25hbWVzcGFjZVx1MDAzZS9cdTAwM2NuYW1lXHUwMDNlXCIuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7InR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6Ik5VTUFSZXNvdXJjZXNPcGVyYXRvclN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBOVU1BUmVzb3VyY2VzT3BlcmF0b3IiLCJwcm9wZXJ0aWVzIjp7ImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb25zIHNob3cgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIE5VTUFSZXNvdXJjZXNPcGVyYXRvciBPcGVyYXRvciIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9uIGNvbnRhaW5zIGRldGFpbHMgZm9yIG9uZSBhc3BlY3Qgb2YgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhpcyBBUEkgUmVzb3VyY2UuXG4tLS1cblRoaXMgc3RydWN0IGlzIGludGVuZGVkIGZvciBkaXJlY3QgdXNlIGFzIGFuIGFycmF5IGF0IHRoZSBmaWVsZCBwYXRoIC5zdGF0dXMuY29uZGl0aW9ucy4gIEZvciBleGFtcGxlLFxuXG5cblx0dHlwZSBGb29TdGF0dXMgc3RydWN0e1xuXHQgICAgLy8gUmVwcmVzZW50cyB0aGUgb2JzZXJ2YXRpb25zIG9mIGEgZm9vJ3MgY3VycmVudCBzdGF0ZS5cblx0ICAgIC8vIEtub3duIC5zdGF0dXMuY29uZGl0aW9ucy50eXBlIGFyZTogXCJBdmFpbGFibGVcIiwgXCJQcm9ncmVzc2luZ1wiLCBhbmQgXCJEZWdyYWRlZFwiXG5cdCAgICAvLyArcGF0Y2hNZXJnZUtleT10eXBlXG5cdCAgICAvLyArcGF0Y2hTdHJhdGVneT1tZXJnZVxuXHQgICAgLy8gK2xpc3RUeXBlPW1hcFxuXHQgICAgLy8gK2xpc3RNYXBLZXk9dHlwZVxuXHQgICAgQ29uZGl0aW9ucyBbXW1ldGF2MS5Db25kaXRpb24gYGpzb246XCJjb25kaXRpb25zLG9taXRlbXB0eVwiIHBhdGNoU3RyYXRlZ3k6XCJtZXJnZVwiIHBhdGNoTWVyZ2VLZXk6XCJ0eXBlXCIgcHJvdG9idWY6XCJieXRlcywxLHJlcCxuYW1lPWNvbmRpdGlvbnNcImBcblxuXG5cdCAgICAvLyBvdGhlciBmaWVsZHNcblx0fSIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoibGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuXG5UaGlzIHNob3VsZCBiZSB3aGVuIHRoZSB1bmRlcmx5aW5nIGNvbmRpdGlvbiBjaGFuZ2VkLiAgSWYgdGhhdCBpcyBub3Qga25vd24sIHRoZW4gdXNpbmcgdGhlIHRpbWUgd2hlbiB0aGUgQVBJIGZpZWxkIGNoYW5nZWQgaXMgYWNjZXB0YWJsZS4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgdGhlIHRyYW5zaXRpb24uXG5UaGlzIG1heSBiZSBhbiBlbXB0eSBzdHJpbmcuIiwibWF4TGVuZ3RoIjozMjc2OCwidHlwZSI6InN0cmluZyJ9LCJvYnNlcnZlZEdlbmVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJvYnNlcnZlZEdlbmVyYXRpb24gcmVwcmVzZW50cyB0aGUgLm1ldGFkYXRhLmdlbmVyYXRpb24gdGhhdCB0aGUgY29uZGl0aW9uIHdhcyBzZXQgYmFzZWQgdXBvbi5cbkZvciBpbnN0YW5jZSwgaWYgLm1ldGFkYXRhLmdlbmVyYXRpb24gaXMgY3VycmVudGx5IDEyLCBidXQgdGhlIC5zdGF0dXMuY29uZGl0aW9uc1t4XS5vYnNlcnZlZEdlbmVyYXRpb24gaXMgOSwgdGhlIGNvbmRpdGlvbiBpcyBvdXQgb2YgZGF0ZVxud2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBpbnN0YW5jZS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBjb250YWlucyBhIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIGluZGljYXRpbmcgdGhlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi5cblByb2R1Y2VycyBvZiBzcGVjaWZpYyBjb25kaXRpb24gdHlwZXMgbWF5IGRlZmluZSBleHBlY3RlZCB2YWx1ZXMgYW5kIG1lYW5pbmdzIGZvciB0aGlzIGZpZWxkLFxuYW5kIHdoZXRoZXIgdGhlIHZhbHVlcyBhcmUgY29uc2lkZXJlZCBhIGd1YXJhbnRlZWQgQVBJLlxuVGhlIHZhbHVlIHNob3VsZCBiZSBhIENhbWVsQ2FzZSBzdHJpbmcuXG5UaGlzIGZpZWxkIG1heSBub3QgYmUgZW1wdHkuIiwibWF4TGVuZ3RoIjoxMDI0LCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW0EtWmEtel0oW0EtWmEtejAtOV8sOl0qW0EtWmEtejAtOV9dKT8kIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mIFRydWUsIEZhbHNlLCBVbmtub3duLiIsImVudW0iOlsiVHJ1ZSIsIkZhbHNlIiwiVW5rbm93biJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIG9mIGNvbmRpdGlvbiBpbiBDYW1lbENhc2Ugb3IgaW4gZm9vLmV4YW1wbGUuY29tL0NhbWVsQ2FzZS5cbi0tLVxuTWFueSAuY29uZGl0aW9uLnR5cGUgdmFsdWVzIGFyZSBjb25zaXN0ZW50IGFjcm9zcyByZXNvdXJjZXMgbGlrZSBBdmFpbGFibGUsIGJ1dCBiZWNhdXNlIGFyYml0cmFyeSBjb25kaXRpb25zIGNhbiBiZVxudXNlZnVsIChzZWUgLm5vZGUuc3RhdHVzLmNvbmRpdGlvbnMpLCB0aGUgYWJpbGl0eSB0byBkZWNvbmZsaWN0IGlzIGltcG9ydGFudC5cblRoZSByZWdleCBpdCBtYXRjaGVzIGlzIChkbnMxMTIzU3ViZG9tYWluRm10Lyk/KHF1YWxpZmllZE5hbWVGbXQpIiwibWF4TGVuZ3RoIjozMTYsInBhdHRlcm4iOiJeKFthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KFxcLlthLXowLTldKFstYS16MC05XSpbYS16MC05XSk/KSovKT8oKFtBLVphLXowLTldWy1BLVphLXowLTlfLl0qKT9bQS1aYS16MC05XSkkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwibWVzc2FnZSIsInJlYXNvbiIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZGFlbW9uc2V0cyI6eyJkZXNjcmlwdGlvbiI6IkRhZW1vblNldHMgb2YgdGhlIGNvbmZpZ3VyZWQgUlRFcywgb25lIHBlciBub2RlIGdyb3VwIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2VkTmFtZSBjb21wcmlzZXMgYSByZXNvdXJjZSBuYW1lLCB3aXRoIGEgbWFuZGF0b3J5IG5hbWVzcGFjZSxcbnJlbmRlcmVkIGFzIFwiXHUwMDNjbmFtZXNwYWNlXHUwMDNlL1x1MDAzY25hbWVcdTAwM2VcIi4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWFjaGluZWNvbmZpZ3Bvb2xzIjp7ImRlc2NyaXB0aW9uIjoiTWFjaGluZUNvbmZpZ1Bvb2xzIHJlc29sdmVkIGZyb20gY29uZmlndXJlZCBub2RlIGdyb3VwcyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTWFjaGluZUNvbmZpZ1Bvb2wgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgZWFjaCBNYWNoaW5lQ29uZmlnUG9vbCBzZWxlY3RlZCBieSBub2RlIGdyb3VwcyIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgcmVwcmVzZW50cyB0aGUgbGF0ZXN0IGF2YWlsYWJsZSBvYnNlcnZhdGlvbnMgb2YgTWFjaGluZUNvbmZpZ1Bvb2wgY3VycmVudCBzdGF0ZS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik1hY2hpbmVDb25maWdQb29sQ29uZGl0aW9uIGNvbnRhaW5zIGNvbmRpdGlvbiBpbmZvcm1hdGlvbiBmb3IgYW4gTWFjaGluZUNvbmZpZ1Bvb2wuIiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJsYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIHRpbWVzdGFtcCBjb3JyZXNwb25kaW5nIHRvIHRoZSBsYXN0IHN0YXR1c1xuY2hhbmdlIG9mIHRoaXMgY29uZGl0aW9uLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgZGVzY3JpcHRpb24gb2YgdGhlIGRldGFpbHMgb2YgdGhlIGxhc3RcbnRyYW5zaXRpb24sIGNvbXBsZW1lbnRpbmcgcmVhc29uLiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoicmVhc29uIGlzIGEgYnJpZWYgbWFjaGluZSByZWFkYWJsZSBleHBsYW5hdGlvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3RcbnRyYW5zaXRpb24uIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mICgnVHJ1ZScsICdGYWxzZScsICdVbmtub3duJykuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBvZiB0aGUgY29uZGl0aW9uLCBjdXJyZW50bHkgKCdEb25lJywgJ1VwZGF0aW5nJywgJ0ZhaWxlZCcpLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsIm1lc3NhZ2UiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImNvbmZpZyI6eyJkZXNjcmlwdGlvbiI6Ik5vZGVHcm91cENvbmZpZyByZXByZXNlbnRzIHRoZSBsYXRlc3QgYXZhaWxhYmxlIGNvbmZpZ3VyYXRpb24gYXBwbGllZCB0byB0aGlzIE1hY2hpbmVDb25maWdQb29sIiwicHJvcGVydGllcyI6eyJpbmZvUmVmcmVzaE1vZGUiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaE1vZGUgc2V0cyB0aGUgbWVjaGFuaXNtIHdoaWNoIHdpbGwgYmUgdXNlZCB0byByZWZyZXNoIHRoZSB0b3BvbG9neSBpbmZvLiIsImVudW0iOlsiUGVyaW9kaWMiLCJFdmVudHMiLCJQZXJpb2RpY0FuZEV2ZW50cyJdLCJ0eXBlIjoic3RyaW5nIn0sImluZm9SZWZyZXNoUGF1c2UiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaFBhdXNlIGRlZmluZXMgaWYgdXBkYXRlcyB0byBOUlRzIGFyZSBwYXVzZWQgZm9yIHRoZSBtYWNoaW5lcyBiZWxvbmdpbmcgdG8gdGhpcyBncm91cCIsImVudW0iOlsiRGlzYWJsZWQiLCJFbmFibGVkIl0sInR5cGUiOiJzdHJpbmcifSwiaW5mb1JlZnJlc2hQZXJpb2QiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaFBlcmlvZCBzZXRzIHRoZSB0b3BvbG9neSBpbmZvIHJlZnJlc2ggcGVyaW9kLiBVc2UgZXhwbGljaXQgMCB0byBkaXNhYmxlLiIsInR5cGUiOiJzdHJpbmcifSwicG9kc0ZpbmdlcnByaW50aW5nIjp7ImRlc2NyaXB0aW9uIjoiUG9kc0ZpbmdlcnByaW50aW5nIGRlZmluZXMgaWYgcG9kIGZpbmdlcnByaW50IHNob3VsZCBiZSByZXBvcnRlZCBmb3IgdGhlIG1hY2hpbmVzIGJlbG9uZ2luZyB0byB0aGlzIGdyb3VwIiwiZW51bSI6WyJEaXNhYmxlZCIsIkVuYWJsZWQiLCJFbmFibGVkRXhjbHVzaXZlUmVzb3VyY2VzIl0sInR5cGUiOiJzdHJpbmcifSwidG9sZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJUb2xlcmF0aW9ucyBvdmVycmlkZXMgdG9sZXJhdGlvbnMgdG8gYmUgc2V0IGludG8gUlRFIGRhZW1vbnNldHMgZm9yIHRoaXMgTm9kZUdyb3VwLiBJZiBub3QgZW1wdHksIHRoZSB0b2xlcmF0aW9ucyB3aWxsIGJlIHRoZSBvbmUgc2V0IGhlcmUuXG5MZWF2ZSBlbXB0eSB0byBtYWtlIHRoZSBzeXN0ZW0gdXNlIHRoZSBkZWZhdWx0IHRvbGVyYXRpb25zLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHBvZCB0aGlzIFRvbGVyYXRpb24gaXMgYXR0YWNoZWQgdG8gdG9sZXJhdGVzIGFueSB0YWludCB0aGF0IG1hdGNoZXNcbnRoZSB0cmlwbGUgXHUwMDNja2V5LHZhbHVlLGVmZmVjdFx1MDAzZSB1c2luZyB0aGUgbWF0Y2hpbmcgb3BlcmF0b3IgXHUwMDNjb3BlcmF0b3JcdTAwM2UuIiwicHJvcGVydGllcyI6eyJlZmZlY3QiOnsiZGVzY3JpcHRpb24iOiJFZmZlY3QgaW5kaWNhdGVzIHRoZSB0YWludCBlZmZlY3QgdG8gbWF0Y2guIEVtcHR5IG1lYW5zIG1hdGNoIGFsbCB0YWludCBlZmZlY3RzLlxuV2hlbiBzcGVjaWZpZWQsIGFsbG93ZWQgdmFsdWVzIGFyZSBOb1NjaGVkdWxlLCBQcmVmZXJOb1NjaGVkdWxlIGFuZCBOb0V4ZWN1dGUuIiwidHlwZSI6InN0cmluZyJ9LCJrZXkiOnsiZGVzY3JpcHRpb24iOiJLZXkgaXMgdGhlIHRhaW50IGtleSB0aGF0IHRoZSB0b2xlcmF0aW9uIGFwcGxpZXMgdG8uIEVtcHR5IG1lYW5zIG1hdGNoIGFsbCB0YWludCBrZXlzLlxuSWYgdGhlIGtleSBpcyBlbXB0eSwgb3BlcmF0b3IgbXVzdCBiZSBFeGlzdHM7IHRoaXMgY29tYmluYXRpb24gbWVhbnMgdG8gbWF0Y2ggYWxsIHZhbHVlcyBhbmQgYWxsIGtleXMuIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Ik9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gdGhlIHZhbHVlLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBFeGlzdHMgYW5kIEVxdWFsLiBEZWZhdWx0cyB0byBFcXVhbC5cbkV4aXN0cyBpcyBlcXVpdmFsZW50IHRvIHdpbGRjYXJkIGZvciB2YWx1ZSwgc28gdGhhdCBhIHBvZCBjYW5cbnRvbGVyYXRlIGFsbCB0YWludHMgb2YgYSBwYXJ0aWN1bGFyIGNhdGVnb3J5LiIsInR5cGUiOiJzdHJpbmcifSwidG9sZXJhdGlvblNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJUb2xlcmF0aW9uU2Vjb25kcyByZXByZXNlbnRzIHRoZSBwZXJpb2Qgb2YgdGltZSB0aGUgdG9sZXJhdGlvbiAod2hpY2ggbXVzdCBiZVxub2YgZWZmZWN0IE5vRXhlY3V0ZSwgb3RoZXJ3aXNlIHRoaXMgZmllbGQgaXMgaWdub3JlZCkgdG9sZXJhdGVzIHRoZSB0YWludC4gQnkgZGVmYXVsdCxcbml0IGlzIG5vdCBzZXQsIHdoaWNoIG1lYW5zIHRvbGVyYXRlIHRoZSB0YWludCBmb3JldmVyIChkbyBub3QgZXZpY3QpLiBaZXJvIGFuZFxubmVnYXRpdmUgdmFsdWVzIHdpbGwgYmUgdHJlYXRlZCBhcyAwIChldmljdCBpbW1lZGlhdGVseSkgYnkgdGhlIHN5c3RlbS4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiVmFsdWUgaXMgdGhlIHRhaW50IHZhbHVlIHRoZSB0b2xlcmF0aW9uIG1hdGNoZXMgdG8uXG5JZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzLCB0aGUgdmFsdWUgc2hvdWxkIGJlIGVtcHR5LCBvdGhlcndpc2UganVzdCBhIHJlZ3VsYXIgc3RyaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIHRoZSBuYW1lIG9mIHRoZSBtYWNoaW5lIGNvbmZpZyBwb29sIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZWxhdGVkT2JqZWN0cyI6eyJkZXNjcmlwdGlvbiI6IlJlbGF0ZWRPYmplY3RzIGxpc3Qgb2Ygb2JqZWN0cyBvZiBpbnRlcmVzdCBmb3IgdGhpcyBvcGVyYXRvciIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiT2JqZWN0UmVmZXJlbmNlIGNvbnRhaW5zIGVub3VnaCBpbmZvcm1hdGlvbiB0byBsZXQgeW91IGluc3BlY3Qgb3IgbW9kaWZ5IHRoZSByZWZlcnJlZCBvYmplY3QuIiwicHJvcGVydGllcyI6eyJncm91cCI6eyJkZXNjcmlwdGlvbiI6Imdyb3VwIG9mIHRoZSByZWZlcmVudC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJuYW1lIG9mIHRoZSByZWZlcmVudC4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZSBvZiB0aGUgcmVmZXJlbnQuIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6InJlc291cmNlIG9mIHRoZSByZWZlcmVudC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJncm91cCIsIm5hbWUiLCJyZXNvdXJjZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19LHsibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6Ik5VTUFSZXNvdXJjZXNPcGVyYXRvciBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbnVtYXJlc291cmNlc29wZXJhdG9ycyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJOVU1BUmVzb3VyY2VzT3BlcmF0b3JTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTlVNQVJlc291cmNlc09wZXJhdG9yIiwicHJvcGVydGllcyI6eyJpbWFnZVNwZWMiOnsiZGVzY3JpcHRpb24iOiJPcHRpb25hbCBSZXNvdXJjZSBUb3BvbG9neSBFeHBvcnRlciBpbWFnZSBVUkwiLCJ0eXBlIjoic3RyaW5nIn0sImxvZ0xldmVsIjp7ImRlZmF1bHQiOiJOb3JtYWwiLCJkZXNjcmlwdGlvbiI6IlZhbGlkIHZhbHVlcyBhcmU6IFwiTm9ybWFsXCIsIFwiRGVidWdcIiwgXCJUcmFjZVwiLCBcIlRyYWNlQWxsXCIuXG5EZWZhdWx0cyB0byBcIk5vcm1hbFwiLiIsImVudW0iOlsiIiwiTm9ybWFsIiwiRGVidWciLCJUcmFjZSIsIlRyYWNlQWxsIl0sInR5cGUiOiJzdHJpbmcifSwibm9kZUdyb3VwcyI6eyJkZXNjcmlwdGlvbiI6Ikdyb3VwIG9mIE5vZGVzIHRvIGVuYWJsZSBSVEUgb24iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik5vZGVHcm91cCBkZWZpbmVzIGdyb3VwIG9mIG5vZGVzIHRoYXQgd2lsbCBydW4gcmVzb3VyY2UgdG9wb2xvZ3kgZXhwb3J0ZXIgZGFlbW9uIHNldFxuWW91IGNhbiBjaG9vc2UgdGhlIGdyb3VwIG9mIG5vZGUgYnkgTWFjaGluZUNvbmZpZ1Bvb2xTZWxlY3RvciBvciBieSBOb2RlU2VsZWN0b3IiLCJwcm9wZXJ0aWVzIjp7ImNvbmZpZyI6eyJkZXNjcmlwdGlvbiI6IkNvbmZpZyBkZWZpbmVzIHRoZSBSVEUgYmVoYXZpb3IgZm9yIHRoaXMgTm9kZUdyb3VwIiwicHJvcGVydGllcyI6eyJpbmZvUmVmcmVzaE1vZGUiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaE1vZGUgc2V0cyB0aGUgbWVjaGFuaXNtIHdoaWNoIHdpbGwgYmUgdXNlZCB0byByZWZyZXNoIHRoZSB0b3BvbG9neSBpbmZvLiIsImVudW0iOlsiUGVyaW9kaWMiLCJFdmVudHMiLCJQZXJpb2RpY0FuZEV2ZW50cyJdLCJ0eXBlIjoic3RyaW5nIn0sImluZm9SZWZyZXNoUGVyaW9kIjp7ImRlc2NyaXB0aW9uIjoiSW5mb1JlZnJlc2hQZXJpb2Qgc2V0cyB0aGUgdG9wb2xvZ3kgaW5mbyByZWZyZXNoIHBlcmlvZC4gVXNlIGV4cGxpY2l0IDAgdG8gZGlzYWJsZS4iLCJ0eXBlIjoic3RyaW5nIn0sInBvZHNGaW5nZXJwcmludGluZyI6eyJkZXNjcmlwdGlvbiI6IlBvZHNGaW5nZXJwcmludGluZyBkZWZpbmVzIGlmIHBvZCBmaW5nZXJwcmludCBzaG91bGQgYmUgcmVwb3J0ZWQgZm9yIHRoZSBtYWNoaW5lcyBiZWxvbmdpbmcgdG8gdGhpcyBncm91cCIsImVudW0iOlsiRGlzYWJsZWQiLCJFbmFibGVkIiwiRW5hYmxlZEV4Y2x1c2l2ZVJlc291cmNlcyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImRpc2FibGVQb2RzRmluZ2VycHJpbnRpbmciOnsiZGVzY3JpcHRpb24iOiJEaXNhYmxlUG9kc0ZpbmdlcnByaW50aW5nIGRlZmluZXMgaWYgcG9kIGZpbmdlcnByaW50IHNob3VsZCBiZSBvbWl0dGVkIGZvciB0aGUgbWFjaGluZXMgYmVsb25naW5nIHRvIHRoaXMgZ3JvdXAgKERFUFJFQ0FURUQ6IHVzZSBDb25maWcgaW5zdGVhZCkiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJtYWNoaW5lQ29uZmlnUG9vbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiTWFjaGluZUNvbmZpZ1Bvb2xTZWxlY3RvciBkZWZpbmVzIGxhYmVsIHNlbGVjdG9yIGZvciB0aGUgbWFjaGluZSBjb25maWcgcG9vbCIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJwb2RFeGNsdWRlcyI6eyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsIE5hbWVzcGFjZS9OYW1lIGdsb2IgcGF0dGVybnMgb2YgcG9kIHRvIGlnbm9yZSBhdCBub2RlIGxldmVsIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2VkTmFtZSBjb21wcmlzZXMgYSByZXNvdXJjZSBuYW1lLCB3aXRoIGEgbWFuZGF0b3J5IG5hbWVzcGFjZSxcbnJlbmRlcmVkIGFzIFwiXHUwMDNjbmFtZXNwYWNlXHUwMDNlL1x1MDAzY25hbWVcdTAwM2VcIi4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTlVNQVJlc291cmNlc09wZXJhdG9yU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE5VTUFSZXNvdXJjZXNPcGVyYXRvciIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgc2hvdyB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgTlVNQVJlc291cmNlc09wZXJhdG9yIE9wZXJhdG9yIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb24gY29udGFpbnMgZGV0YWlscyBmb3Igb25lIGFzcGVjdCBvZiB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGlzIEFQSSBSZXNvdXJjZS5cbi0tLVxuVGhpcyBzdHJ1Y3QgaXMgaW50ZW5kZWQgZm9yIGRpcmVjdCB1c2UgYXMgYW4gYXJyYXkgYXQgdGhlIGZpZWxkIHBhdGggLnN0YXR1cy5jb25kaXRpb25zLiAgRm9yIGV4YW1wbGUsXG5cblxuXHR0eXBlIEZvb1N0YXR1cyBzdHJ1Y3R7XG5cdCAgICAvLyBSZXByZXNlbnRzIHRoZSBvYnNlcnZhdGlvbnMgb2YgYSBmb28ncyBjdXJyZW50IHN0YXRlLlxuXHQgICAgLy8gS25vd24gLnN0YXR1cy5jb25kaXRpb25zLnR5cGUgYXJlOiBcIkF2YWlsYWJsZVwiLCBcIlByb2dyZXNzaW5nXCIsIGFuZCBcIkRlZ3JhZGVkXCJcblx0ICAgIC8vICtwYXRjaE1lcmdlS2V5PXR5cGVcblx0ICAgIC8vICtwYXRjaFN0cmF0ZWd5PW1lcmdlXG5cdCAgICAvLyArbGlzdFR5cGU9bWFwXG5cdCAgICAvLyArbGlzdE1hcEtleT10eXBlXG5cdCAgICBDb25kaXRpb25zIFtdbWV0YXYxLkNvbmRpdGlvbiBganNvbjpcImNvbmRpdGlvbnMsb21pdGVtcHR5XCIgcGF0Y2hTdHJhdGVneTpcIm1lcmdlXCIgcGF0Y2hNZXJnZUtleTpcInR5cGVcIiBwcm90b2J1ZjpcImJ5dGVzLDEscmVwLG5hbWU9Y29uZGl0aW9uc1wiYFxuXG5cblx0ICAgIC8vIG90aGVyIGZpZWxkc1xuXHR9IiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJsYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGUgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci5cblRoaXMgc2hvdWxkIGJlIHdoZW4gdGhlIHVuZGVybHlpbmcgY29uZGl0aW9uIGNoYW5nZWQuICBJZiB0aGF0IGlzIG5vdCBrbm93biwgdGhlbiB1c2luZyB0aGUgdGltZSB3aGVuIHRoZSBBUEkgZmllbGQgY2hhbmdlZCBpcyBhY2NlcHRhYmxlLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Im1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCB0aGUgdHJhbnNpdGlvbi5cblRoaXMgbWF5IGJlIGFuIGVtcHR5IHN0cmluZy4iLCJtYXhMZW5ndGgiOjMyNzY4LCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiByZXByZXNlbnRzIHRoZSAubWV0YWRhdGEuZ2VuZXJhdGlvbiB0aGF0IHRoZSBjb25kaXRpb24gd2FzIHNldCBiYXNlZCB1cG9uLlxuRm9yIGluc3RhbmNlLCBpZiAubWV0YWRhdGEuZ2VuZXJhdGlvbiBpcyBjdXJyZW50bHkgMTIsIGJ1dCB0aGUgLnN0YXR1cy5jb25kaXRpb25zW3hdLm9ic2VydmVkR2VuZXJhdGlvbiBpcyA5LCB0aGUgY29uZGl0aW9uIGlzIG91dCBvZiBkYXRlXG53aXRoIHJlc3BlY3QgdG8gdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGluc3RhbmNlLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoicmVhc29uIGNvbnRhaW5zIGEgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgaW5kaWNhdGluZyB0aGUgcmVhc29uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLlxuUHJvZHVjZXJzIG9mIHNwZWNpZmljIGNvbmRpdGlvbiB0eXBlcyBtYXkgZGVmaW5lIGV4cGVjdGVkIHZhbHVlcyBhbmQgbWVhbmluZ3MgZm9yIHRoaXMgZmllbGQsXG5hbmQgd2hldGhlciB0aGUgdmFsdWVzIGFyZSBjb25zaWRlcmVkIGEgZ3VhcmFudGVlZCBBUEkuXG5UaGUgdmFsdWUgc2hvdWxkIGJlIGEgQ2FtZWxDYXNlIHN0cmluZy5cblRoaXMgZmllbGQgbWF5IG5vdCBiZSBlbXB0eS4iLCJtYXhMZW5ndGgiOjEwMjQsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bQS1aYS16XShbQS1aYS16MC05Xyw6XSpbQS1aYS16MC05X10pPyQiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgVHJ1ZSwgRmFsc2UsIFVua25vd24uIiwiZW51bSI6WyJUcnVlIiwiRmFsc2UiLCJVbmtub3duIl0sInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgb2YgY29uZGl0aW9uIGluIENhbWVsQ2FzZSBvciBpbiBmb28uZXhhbXBsZS5jb20vQ2FtZWxDYXNlLlxuLS0tXG5NYW55IC5jb25kaXRpb24udHlwZSB2YWx1ZXMgYXJlIGNvbnNpc3RlbnQgYWNyb3NzIHJlc291cmNlcyBsaWtlIEF2YWlsYWJsZSwgYnV0IGJlY2F1c2UgYXJiaXRyYXJ5IGNvbmRpdGlvbnMgY2FuIGJlXG51c2VmdWwgKHNlZSAubm9kZS5zdGF0dXMuY29uZGl0aW9ucyksIHRoZSBhYmlsaXR5IHRvIGRlY29uZmxpY3QgaXMgaW1wb3J0YW50LlxuVGhlIHJlZ2V4IGl0IG1hdGNoZXMgaXMgKGRuczExMjNTdWJkb21haW5GbXQvKT8ocXVhbGlmaWVkTmFtZUZtdCkiLCJtYXhMZW5ndGgiOjMxNiwicGF0dGVybiI6Il4oW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8oXFwuW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8pKi8pPygoW0EtWmEtejAtOV1bLUEtWmEtejAtOV8uXSopP1tBLVphLXowLTldKSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJtZXNzYWdlIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJkYWVtb25zZXRzIjp7ImRlc2NyaXB0aW9uIjoiRGFlbW9uU2V0cyBvZiB0aGUgY29uZmlndXJlZCBSVEVzLCBvbmUgcGVyIG5vZGUgZ3JvdXAiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZWROYW1lIGNvbXByaXNlcyBhIHJlc291cmNlIG5hbWUsIHdpdGggYSBtYW5kYXRvcnkgbmFtZXNwYWNlLFxucmVuZGVyZWQgYXMgXCJcdTAwM2NuYW1lc3BhY2VcdTAwM2UvXHUwMDNjbmFtZVx1MDAzZVwiLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYWNoaW5lY29uZmlncG9vbHMiOnsiZGVzY3JpcHRpb24iOiJNYWNoaW5lQ29uZmlnUG9vbHMgcmVzb2x2ZWQgZnJvbSBjb25maWd1cmVkIG5vZGUgZ3JvdXBzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJNYWNoaW5lQ29uZmlnUG9vbCBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBlYWNoIE1hY2hpbmVDb25maWdQb29sIHNlbGVjdGVkIGJ5IG5vZGUgZ3JvdXBzIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9ucyByZXByZXNlbnRzIHRoZSBsYXRlc3QgYXZhaWxhYmxlIG9ic2VydmF0aW9ucyBvZiBNYWNoaW5lQ29uZmlnUG9vbCBjdXJyZW50IHN0YXRlLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTWFjaGluZUNvbmZpZ1Bvb2xDb25kaXRpb24gY29udGFpbnMgY29uZGl0aW9uIGluZm9ybWF0aW9uIGZvciBhbiBNYWNoaW5lQ29uZmlnUG9vbC4iLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Imxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgdGltZXN0YW1wIGNvcnJlc3BvbmRpbmcgdG8gdGhlIGxhc3Qgc3RhdHVzXG5jaGFuZ2Ugb2YgdGhpcyBjb25kaXRpb24uIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwibnVsbGFibGUiOnRydWUsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Im1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBkZXNjcmlwdGlvbiBvZiB0aGUgZGV0YWlscyBvZiB0aGUgbGFzdFxudHJhbnNpdGlvbiwgY29tcGxlbWVudGluZyByZWFzb24uIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJyZWFzb24gaXMgYSBicmllZiBtYWNoaW5lIHJlYWRhYmxlIGV4cGxhbmF0aW9uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdFxudHJhbnNpdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgKCdUcnVlJywgJ0ZhbHNlJywgJ1Vua25vd24nKS4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIG9mIHRoZSBjb25kaXRpb24sIGN1cnJlbnRseSAoJ0RvbmUnLCAnVXBkYXRpbmcnLCAnRmFpbGVkJykuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibGFzdFRyYW5zaXRpb25UaW1lIiwibWVzc2FnZSIsInJlYXNvbiIsInN0YXR1cyIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiY29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiTm9kZUdyb3VwQ29uZmlnIHJlcHJlc2VudHMgdGhlIGxhdGVzdCBhdmFpbGFibGUgY29uZmlndXJhdGlvbiBhcHBsaWVkIHRvIHRoaXMgTWFjaGluZUNvbmZpZ1Bvb2wiLCJwcm9wZXJ0aWVzIjp7ImluZm9SZWZyZXNoTW9kZSI6eyJkZXNjcmlwdGlvbiI6IkluZm9SZWZyZXNoTW9kZSBzZXRzIHRoZSBtZWNoYW5pc20gd2hpY2ggd2lsbCBiZSB1c2VkIHRvIHJlZnJlc2ggdGhlIHRvcG9sb2d5IGluZm8uIiwiZW51bSI6WyJQZXJpb2RpYyIsIkV2ZW50cyIsIlBlcmlvZGljQW5kRXZlbnRzIl0sInR5cGUiOiJzdHJpbmcifSwiaW5mb1JlZnJlc2hQZXJpb2QiOnsiZGVzY3JpcHRpb24iOiJJbmZvUmVmcmVzaFBlcmlvZCBzZXRzIHRoZSB0b3BvbG9neSBpbmZvIHJlZnJlc2ggcGVyaW9kLiBVc2UgZXhwbGljaXQgMCB0byBkaXNhYmxlLiIsInR5cGUiOiJzdHJpbmcifSwicG9kc0ZpbmdlcnByaW50aW5nIjp7ImRlc2NyaXB0aW9uIjoiUG9kc0ZpbmdlcnByaW50aW5nIGRlZmluZXMgaWYgcG9kIGZpbmdlcnByaW50IHNob3VsZCBiZSByZXBvcnRlZCBmb3IgdGhlIG1hY2hpbmVzIGJlbG9uZ2luZyB0byB0aGlzIGdyb3VwIiwiZW51bSI6WyJEaXNhYmxlZCIsIkVuYWJsZWQiLCJFbmFibGVkRXhjbHVzaXZlUmVzb3VyY2VzIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgdGhlIG5hbWUgb2YgdGhlIG1hY2hpbmUgY29uZmlnIHBvb2wiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOmZhbHNlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:0f3627ca652f1a48be71d60c75cf80e4a7430d2d95b425a8b229f8275ed067ad
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel9-operator@sha256:5bc54f7014b5fd120976e127d0870772e7f8c6893c944be93e808bf6a2d39684
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:7461a093418f612f9af76e2ea9abec6c0f444f3aca42248c81f7ae3c4bfb5560
name: numaresources-operator.v4.16.5
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.16.5
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:7461a093418f612f9af76e2ea9abec6c0f444f3aca42248c81f7ae3c4bfb5560
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel9-operator@sha256:0a1a8da240112d21c0f0219506eeda503122679e96f9aa829b30699646eecba0
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:9542d494cd5a3d97b1a4d3504bf0fcb5155ebaabbbd964465790cc0d6f2deb9f
name: numaresources-operator.v4.16.6
package: numaresources-operator
properties:
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesOperator
    version: v1alpha1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1
- type: olm.gvk
  value:
    group: nodetopology.openshift.io
    kind: NUMAResourcesScheduler
    version: v1alpha1
- type: olm.package
  value:
    packageName: numaresources-operator
    version: 4.16.6
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/openshift4/numaresources-operator-bundle@sha256:9542d494cd5a3d97b1a4d3504bf0fcb5155ebaabbbd964465790cc0d6f2deb9f
  name: ""
- image: registry.redhat.io/openshift4/numaresources-rhel9-operator@sha256:aca8232e89172ca9fd9ce4a66cae9e8bb027b6d16482ce6b8e27fb7779c398e2
  name: manager
schema: olm.bundle
