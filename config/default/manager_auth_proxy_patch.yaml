# This patch inject a sidecar container which is a HTTP proxy for the
# controller manager, it performs RBAC authorization against the Kubernetes API using SubjectAccessReviews.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
spec:
  template:
    spec:
      containers:
      - name: manager
      - name: kube-rbac-proxy
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        args:
        - "--secure-listen-address=0.0.0.0:8443"
        - "--upstream=http://127.0.0.1:8080/"
        - "--config-file=/etc/kube-rbac-proxy/config.yaml"
        - "--tls-cert-file=/etc/tls/private/tls.crt"
        - "--tls-private-key-file=/etc/tls/private/tls.key"
        - "--allow-paths=/metrics"
        - "--logtostderr=true"
        - "-v=10"
        ports:
        - containerPort: 8443
          protocol: TCP
          name: https
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/kube-rbac-proxy
          name: secret-kube-rbac-proxy-metric
          readOnly: true
        - mountPath: /etc/tls/private
          name: secret-kube-rbac-proxy-tls
          readOnly: true
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: secret-kube-rbac-proxy-tls
        secret:
          secretName: secret-kube-rbac-proxy-tls
      - name: secret-kube-rbac-proxy-metric
        secret:
          secretName: secret-kube-rbac-proxy-metric
